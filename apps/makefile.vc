
GDAL_ROOT	=	..

XTRAOBJ =	$(SETARGV)

LIBS	=	$(GDAL_ROOT)\gdal_i.lib

XTRAFLAGS =	-I..\frmts -I..\alg

!INCLUDE ..\nmake.opt
									-
!IFDEF INCLUDE_OGR_FRMTS
OGR_PROGRAMS =	gdal_contour.exe gdaltindex.exe gdal_rasterize.exe
!ENDIF

default:	gdal_translate.exe gdalinfo.exe gdaladdo.exe gdalwarp.exe \
		$(OGR_PROGRAMS)

all:	default gdalwarpsimple.exe

gdalinfo.exe:	gdalinfo.c $(GDALLIB) $(XTRAOBJ) 
	$(CC) $(CFLAGS) $(XTRAFLAGS) gdalinfo.c $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1
	
gdal_translate.exe:	gdal_translate.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) $(XTRAFLAGS) gdal_translate.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1
	
gdaladdo.exe:	gdaladdo.cpp $(GDALLIB) $(XTRAOBJ)
	$(CC) $(CFLAGS) $(XTRAFLAGS) gdaladdo.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1
	
gdalwarpsimple.exe:	gdalwarpsimple.c $(GDALLIB) $(XTRAOBJ) 
	$(CC) $(CFLAGS) $(XTRAFLAGS) gdalwarpsimple.c $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1
	
gdalwarp.exe:	gdalwarp.cpp $(GDALLIB) $(XTRAOBJ) 
	$(CC) $(CFLAGS) $(XTRAFLAGS) gdalwarp.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1
	
gdal_contour.exe:	gdal_contour.cpp $(GDALLIB) $(XTRAOBJ) 
	$(CC) $(CFLAGS) $(XTRAFLAGS) gdal_contour.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1
	
gdaltindex.exe:	gdaltindex.c $(GDALLIB) $(XTRAOBJ)
	$(CC) /I$(GDAL_ROOT) $(CFLAGS) $(XTRAFLAGS) gdaltindex.c \
		../ogr/ogrsf_frmts/shape/shpopen.c \
		../ogr/ogrsf_frmts/shape/dbfopen.c \
		$(XTRAOBJ) $(LIBS) /link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1
	
gdal_rasterize.exe:	gdal_rasterize.cpp $(GDALLIB) $(XTRAOBJ) 
	$(CC) $(CFLAGS) $(XTRAFLAGS) gdal_rasterize.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1

multireadtest.exe:	multireadtest.cpp $(GDALLIB) $(XTRAOBJ) 
	$(CC) $(CFLAGS) $(XTRAFLAGS) multireadtest.cpp $(XTRAOBJ) $(LIBS) \
		/link $(LINKER_FLAGS)
	if exist $@.manifest mt -manifest $@.manifest -outputresource:$@;1
	
clean:
	-del *.obj
	-del *.exe
	-del *.pdb
	-del *.ilk
	-del *.lib
	-del *.manifest

install:	default
	copy *.exe $(BINDIR)
