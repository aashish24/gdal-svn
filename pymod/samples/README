This directory contains sample scripts intended to give an idea how GDAL's
Python interface may be used in your applications.

Script list:
------------------------------------------------------------------------------

fft.py			Script to perform forward and inverse two-dimensional
			fast Fourier transform.

gdal2grd.py		Script to write out ASCII GRD rasters (used in Golden
			Software Surfer) from any source supported by GDAL.

val_repl.py		Script to replace specified values from the input
			raster file with the new ones. May be useful in cases
			when you don't like value, used for NoData indication
			and want replace it with other value. Input file
			remains unchanged, results stored in other file.

assemblepoly.py         Script demonstrates how to assemble polygons from
			arcs.  Demonstrates various aspects of OGR Python API.

tigerpoly.py            Script demonstrating how to assemble polygons from
			arcs in TIGER/Line datasource, writing results to
			a newly created shapefile. 

tolatlong.py		Script to read coordinate system and geotransformation
			matrix from input file and report latitude/longitude
			coordinates for the specified pixel.

get_soundg.py           Script to copy the SOUNDG layer from an S-57 file to
                        a Shapefile, splitting up features with MULTIPOINT
                        geometries into many POINT feature, and appending
                        the point elevations as an attribute. 

gdalfilter.py           Example script for applying kernel based filters to
                        an image using GDAL.  Demonstrates use of virtual
                        files as an intermediate representation. 

rel.py			Script to produce a shaded relief image from the
			elevation data.

gdal_vrtmerge.py        Similar to gdal_merge.py, but produces a VRT file. 

vec_tr.py               Example of applying some algorithm to all the 
                        geometries in the file, such as a fixed offset.

vec_tr_spat.py          Example of using Intersect() to filter based on 
                        only those features that truely intersect a given
                        rectangle.  Easily extended to general polygon!

