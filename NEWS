= GDAL/OGR 1.6.1 =

5/10/2009

General:
 * Add cast to (unsigned char) in all isspace() calls (#1681)

OGR:
 * (core) Fix crash in OGRStyleTable::AddStyle (#2810, #2531)
 * (core) crash in OGRLinearRing::get_Area() (#2792)
 * (core) GetFieldAsString() fails (aborts) on Ubuntu 8.10 (#2896)
 * (core) Issues related to wildcard expansion in SQL result layer (#2788)
 * (core) Generic SQL doesn't support feature styles (#2808)
 
 * (BNA) BNA inner ring contains only duplication of first point (#2985)
 * (Geoconcept) out of bound access in geoconcept.c (#2918)
 * (GeoJSON) Handle "link" and "name" srs members for GeoJSON (#2665)
 * (GeoJSON) Memory leak in GeoJSON driver for spatial reference of geometry of feature (#2863)
 * (GML) GML read failure on some Unicode strings for GDAL 1.6+ (#2948)
 * (GML) OGRGMLLayer::GetFeatureCount() returns -1 if there's a .XSD file available (#2969)
 * (GML) GDAL thinks string field is an integer field in GML layer (#2493)
 * (GPX) OGR GPX driver creates duplicate field names in shapefile (#2966)
 * (KML) KML Driver - Placemark with Multigeometry Polygons fails (#1853)
 * (KML) KML: Encoding issue and mixed container (#2181)
 * (KML) KML: Documents with multiple geometry types are not supported (#1803)
 * (OCI) OCI varchar2(4000) (#2876)
 * (PG) Postgresql field count wrong (#962)
 * (PG) postgres driver failes to create geometry index if layer name starts with a number (#2945)
 * (SDE) SDE connection failed message non descriptive (#1444)
 * (Shape) .dbf files; inconsistencies with date formats (#2746)
 * (VRT) OGR VRT driver may crash when there are missing elements in the XML definition (#2952)

OGR Spatial References:
 * PROJCS with AXIS considered invalid (#2739)
 * Wrong name for SRS_PT_LAMBERT_CONFORMAL_CONIC_2SP_BELGIUM (#2763)
 * IsSame results in false positive for LOCAL_CS (#2849)
 * ERMapper projection lookup problem (#2819)

Documentation:
 * gdalwarp man page not generated in GDAL 1.6.0 (#2742)
 * some bogus part in gdal_contour manual (#2790)

Utilities:
 * Make gdalbuildvrt compiled by default in 1.6.1 (#2987)
 * Python utililities should support command-line wildcards (#2783)
 * gdal_contour segfaults when no output specified (#2789)
 * gdal_contour: -3d option doesn't work just after -fl option (#2793)
 * gdal_contour segfaults if wrong band number is specified (#2794)
 * gdal_vrtmerge.py -separate doesn't work (#2836)
 * gdalwarp cblend option does not work (#2733)
 * gdalwarp ignores cutline when -tr specified (#2847)
 * gdalwarp cutline off source problems (#2853)
 * multi-part cutlines not supported (#2984)

Algorithms:
 * NODATA missing in blank area when warping vrt file with expanded RGB into vrt (#2724)
 * Cutline with blend gives wrong results inside cut polygon (#2735)
 * Cutline with blend don't blend correctly for some pixel rows (#2740)
 * typo in name GDAL_CG_Create in contour.cpp (#2795)
 * Lanczos and CubicSpline resampler buffer error on 2x2 images (#2960)

GDAL:
 * (all) A number of drivers implementation of Create() and CreateCopy() don't handle properly nBands == 0 (#2799)

 * (core) Building RRD overviews using AVERAGE_BIT2GRAYSCALE results in wrong value (#2914)
 * (core) Closing a dataset opened with GDALOpenShared in another thread causes later corruption (#2897)
 * (core) GDAL gcore not robust enough to invalid raster block dimensions (#2822)
 * (core) GDALDatasetPool::~GDALDatasetPool() asserts when an underlying file cannot be opened (#2837)
 * (core) GDALOpenShared may crashes if dataset description is not the dataset filename (#2797)
 * (core) Overview is AUX (#2854)
 * (core) GDALVersionInfo(NULL) segfaults (#2826)

 * (AIGRID) AIGRID driver cannot read RAT on Windows (#2865)
 * (BMP) BMP driver may crash when reading corrupted files (#2827)
 * (BSB) bsb kap noaa (#2817)
 * (BSB) BSBDataset::open() function may consider a non-BSB file as a BSB file (#2881)
 * (BSB) Problem with gcps count in BSB Driver (#2777)
 * (BSB) Failure reading BSB image (#2782)
 * (DOQ2) Potential stack buffer overflow in DOQ2 metadata reading (#2835)
 * (DTED) Buffer overflow in DTEDCreateCopy (#2824)
 * (DTED) DTED driver cannot read any more files with VOL or HDR (#2951)
 * (ECW) GDAL ECW driver requires to define _WIN32_WINNT=0x0500 with MSVC2008 (#2850)
 * (ECW) Memory overwrite while zooming an ECW image (#2934)
 * (ENVI) ENVI importer crashes when attempting to open an ENVI signature file. (#2778)
 * (ERS) ERS file pointing to an ECW file is not opening when a full path name is not specified (#2908)
 * (ERS) ERS shows 8 bit signed integer datasets as unsigned integer. (#2902)
 * (GeoRaster) Georaster - Pyramid Levels mismatch (#2946)
 * (GeoRaster) GeoRaster: Error compressing (DEFLATE) incomplete blocks (#2924)
 * (GeoRaster) georaster: In Oracle 10g generateSpatialExtent() in PL/SQL accept only one parameter (#2754)
 * (GeoRaster) GeoRaster: NBIT need swapping (#2917)
 * (GeoRaster) GeoRaster: Non georeferenced images wrongly reported (#2967)
 * (GeoRaster) GeoRaster: Some combinations of Interleaving and bands per blocks fail (#2923)
 * (GFF) GFF driver doesn't support big endian host (#2832)
 * (GIF) Opening large GIF files causes GDALOpen() to hang. (#2542)
 * (GRIB) GRIB driver asserts (crashes) on opening this dataset (#2751)
 * (GRIB) GRIB driver crashes with large datasets (#2887)
 * (GTiff) gdalwarp to geotiff - TFW=YES ignored (#2760)
 * (GTiff) gdalwarp to geotiff 1 bit mangles image (#2759)
 * (GTiff) gdalwarp with compression corrupts output (#2820) - Note: regression that appeared after 1.6.0 release
 * (GTiff) GTiffRasterBand::IReadBlock() is terrible slow for big number of bands and pixel interleaving (#2838)
 * (GTiff - libtiff) JPEG compression in TIF doesn't work (#2748)
 * (GTiff) SetColorTable() not supported for existing TIFF files (#2421)
 * (GTiff - libgeotiff) avoid needlessly deaccessing all csv files (#2957) 
 * (GXF) GXF driver doesn't validate raster dimensions (#2829)
 * (HDF4) HDF4: Mixing Windows driver with subdataset ID (#2823)
 * (HDF5) HDF5 driver easily confused about datatypes (#2941)
 * (HDF5) Wrong initial value for nGCPCount in HDF5 sub-datasets (#2774)
 * (HFA) Set projection to an existing HFA dataset as a PE string (#2731)
 * (HFA) Unable to delete colormap from HFA (#2842)
 * (INGR) Overviews cannot be built for CIT or COT (#2904)
 * (ISIS, PDS) Projection Warning only printed for debug mode (ISIS 2/3, PDS) (#2873)
 * (JDEM) JDEM driver leaks and may crash on corrupted dataset (#2828)
 * (NITF) 11 bit JPEG2000 compressed NITF shows as 8 bit (#2964)
 * (NITF) Reposition all NITF image and annotation segments relative to the base (0) segment (#2912)
 * (NITF) ScanJPEGBlocks() finds too many "Start of Image" markers (#2927)
 * (PDS) Keyword causing format unrecognized (PDS) (#2956)
 * (SGI) Corrupted SGI images can cause crashes (#2803)
 * (VRT) Crash when serializing VRTDerivedRasterBand without pixel func defined (#2877)
 * (VRT) VRTSourcedRasterBand fails if there are no sources (#2728)
 * (VRT) Blocks of data missing when warping cascaded vrt (#2867)

Configuration:
 * OGR_ENABLED not properly defined in win32 builds (#2784)
 * mysql compile error with GCC 4.3.2: error: macro "min" passed 3 arguments, but takes just 2 (#2972)
 * external libz header is not found when setting the --with-libz=ARG switch (#2942)
 * ./configure --disable-static broken on MacOSX (#1878)

SWIG (all bindings):
 * Need to expose ImportFromMICoordSys/ExportToMICoordSys to the SWIG interface (#2722)
 * Invalid inheritance in SWIG definition of  GDALColorTableShadow and GDALRasterAttributeTableShadow (#2874)
 * swig 1.3.39 breaks nearly all swig bindings (java, python, ruby) (#2954)

Python:
 * Python callbacks only support functions, not any callable (#2743)
 * Broken python bindings for TransformCoordinates method of osr.CoordinateTransformation (#2764)
 * GetFieldAsDate call in python bindings should be GetFieldAsDateTime (#2765)
 * GetFieldAsStringList c# and Python wraper (#2839)
 * python typemaps for OBJECT_LIST_INPUT(GDALRasterBandShadow) is broken (#2872)
 * Python bindings don't build on Mandriva 2009.1 (#2974)

.NET:
 * C# Vista 64-bit OSGeo.OGR.Datasource.CreateLayer freezing (#2173)
 * Support MSVC2008 builds with the csharp interface (#2862)
 * Problems to compile swigged GDAL for C# on 64 bit machine (#2928)
 * Change the dll mapping rules to support the recent MONO versions (#2961)

= GDAL/OGR 1.6.0 = 

== GDAL/OGR 1.6.0 - General Changes ==

Build (Unix):
 * Added basic support for LDFLAGS
 * Try prefix/lib before prefix/src for proj.4 linking (#1345)
 * Allow specification of a python binary for --with-ogpython (#2258)
 * Added NAS driver config support
 * Fixed Expat detection problem on MinGW (#2050)
 * Fix INST_DATA setting (/share/gdal instead of /share) (#2382)
 * Build MSGN driver on Unix-like platforms
 * Added MSG driver support to configure.in. EUMETSAT Wavelet Trasform software is only detected on request, option --with-msg specified.
 * Improve cross-compilation
 * Fix linking with HDF4 library when configuring with --with-hdf4 or --with-hdf4=yes (#2602)
 * Fixes for compilation with GCC 4.3

Build (Windows)
 * Default to non-debug builds.  Use /GR in pre 1400 builds so that dynamic_cast doesn't just cause an blowout.  Use .pdb file with version embedded.
 * Make vc++ builds usable from mingw (#2216)
 * Updated nmake.opt for building with Visual C++ adding /W3 flag for release build and /W4 for debug build.
 * Add VS Makefile for GDAL and OGR DODS drivers (#2383)

Build (All)
 * Remove support for "Panorama" GIS SDK (#2669)

Port:
 * RFC 19: Added VSIMalloc2() and VSIMalloc3() API and use them in GDAL drivers
 * RFC 23: Added implementation of recode API
 * Added infrastructure to detect bad arguments to printf-like functions
 * Added CPLHashSet data structure
 * Added quad tree implementation derived from shapelib & mapserv
 * Added support for reading on-the-fly .gz files and .zip files (#1369)
 * Added CSLFindName()
 * Added two new flags to CSLTokenizeString2() function: CSLT_STRIPLEADSPACES and CSLT_STRIPENDSPACES to strip leading and ending spaces from the token.
 * Added CSVGetNextLine() to fetch next record based on just csv filename
 * Added CPL_ACCUM_ERROR_MSG=ON for CPLQuietErrorHandler
 * Added CPL_MAX_ERROR_REPORTS config option (#2409).
 * Added CPL_INLINE macro
 * Added UNREFERENCED_PARAM macro to cpl_port.h.
 * Added CPLGenerateTempFilename()
 * Improve performance of CPLParseXMLString from O(n*n) to O(n) where n is the number of siblings node
 * Fix bug with url encoding in CPLEscapeString() (#2314)
 * Various fixes in CPLList implementation (CPLListInsert and CPLListRemove) (#2134)
 * VSIMEM: added path normalization so everything is converted to forward slashes
 * VSIMEM: prevent file extension, or write/update to files opened in readonly mode
 * cpl_path.cpp: Add CPLAssert to check that the string inputs are not the result static buffer

Utilities:
 * Added a --utility_version that displays the version of GDAL used for compiling the utility and add runtime checks to see if GDAL library is compatible with the utility version

== GDAL 1.6.0 - Overview of Changes ==

Core :
 * RFC 22 : Added RPC and IMD support
 * Added support for computing statistics for datasets with arbitrary overviews in GDALRasterBand::ComputeStatistics()
 * Added Gaussian resampling in overview building (#2137)
 * Added Mode resampling in overview building (#2347)
 * Allow fast NONE overview generation (#2677)
 * Added in GDALRasterBand::GetRasterSampleOverview() and ComputeRasterMinMax() (#2148)
 * Preliminary gmljp2 specific changes to address axis orientation (#2131)
 * Added GDALProxyDataset and GDALProxyRasterBand abstract classes to be able to make proxy datasets and raster bands
 * Added a proxy dataset class, GDALProxyPoolDataset, that differ at the maximum the opening of the underlying dataset and keep the number of simultaneous opened underlying datasets under a limit (similar to what is done in the RPFTOC driver)
 * Migrate GDALRegenerateOverviews() to C API
 * Added GDALDestroyDriver()
 * Added special case in GDALCopyWholeRaster to be more friendly when writing a tiled compressed GeoTIFF (massive reduction of destination file size)
 * Added GDALRegenerateOverviewsMultiBand to process all the bands at the same time to optimize the generations of compressed pixel-interleaved overviews (such as JPEG-In-TIFF). Optimization triggered in some cases for external and internal GeoTIFF overviews. PHOTOMETRIC_OVERVIEW and INTERLEAVE_OVERVIEW config options added for external overviews. -ro option added to gdaladdo to generate external overviews for GeoTIFF. Result : divide by 2 to 3 the size of JPEG-In-TIFF overviews on big RGB datasets
 * Add a new class GDALNoDataValuesMaskBand to create a per-dataset nodata mask band (GMF_PER_DATASET | GMF_NODATA) when the metadata item NODATA_VALUES is found on the dataset (#2149)

 * Fix segfault when building overviews with --config USE_RRD YES (#2145)
 * PAM: save floating point nodata in IEEE floating point binary format
 * Fix division by zero in GDALGetRandomRasterSample (#2429)
 * GDALOpen: Use EOVERFLOW if defined otherwise use hardcoded likely values (#2437)
 * Replace implementation of arrays for maintaining the list of opened shared datasets by a CPLHashSet to avoid O(n*n) complexity
 * Fix GDALRasterBand::IRasterIO fails to read data from dataset when block cache is too small (#2457)
 * Modify GDALFindAssociatedAuxFile() to only select .aux files that have the same raster configuration as the target dataset (PxLxB).  (#2471).
 * When available use arbitrary overviews for computations in GDALRasterBand::ComputeRasterMinMax() and GDALRasterBand::GetHistogram().
 * Fix crash in GDALValidateCreationOptions when passed a creation option not in format key=value (#2499)
 * Fix 'GDALNoDataMaskBand::IReadBlock doesn't behave correctly when eWrkDT != eDataType' (#2504)
 * Use nodata masks when generating overviews (#2149)
 * Improve error propagation when GDALRasterBlock::Write() fails (#2524)
 * gdalnodatamaskband: add case for uint16 and uint32 as uint32 - fixes neg. nodata values for these
 * Add a special case for dealing with RasterIO expansion on writes (#773)
 * Add GDALValidateCreationOptions() checks in GDALDriver::Create() and GDALDriver::CreateCopy(). Can be disabled with GDAL_VALIDATE_CREATION_OPTIONS=NO
 * Optimization of GDALCopyWords for transfer from buffer of packed bytes to buffer of bytes with interleaving (#2536)
 * Use BlockBasedRasterIO in GDALDataset::IRasterIO for pixel-interleaved datasets when source and destination have the same size (#2536)
 * PAM: Allow empty category in .aux.xml  (#2562)
 * GDALDataTypeUnion(): Add missing GDT_CInt16 case that was triggering a CPLAssert(FALSE) (linked to #2564)
 * PAM: improve the find existing histogram logic to check approx and out of range
 * Fix validation of values for creation option parameters of type float
 * Fix memory leak related to PAM histograms
 * Restrict dataset sharing to a one thread by tracking owning pid (#2229)
 * rasterio.cpp: Handle >2GB memory arrays on a 64-bit build (#2199)

Algorithms:
 * Added GDALPolygonize() function
 * Added sieve filter
 * Add implementation of raster hole filler
 * Added proximity algorithm implementation
 * Added GDALRasterizeLayers() function to rasterize the all the features in the list of layers rather than individual geometries.
 * Added support for point geometries rasterization
 * Added line rasterization routine.
 * Added GDALCreateGenImgProjTransformer2()

 * warper: massive upgrade that fixes number of problems with Cubic Spline and Lanczos resamplers, multiple performance improvements.
 * Implement overview building for paletted rasterbands with average resampling by selecting the nearest entry after averaging on R,G,B components (#2408)
 * Fix destination coordinate system setting logic in GDALReprojectImage (#2231)
 * Modify GDALChecksum to give it a deterministic behaviour when given a GDT_[C]Float[32|64] rasterband with NaN and Inf values. The result is backward compatible with previous implementations with finite values
 * Add options to RPC transformer, use for RPC_HEIGHT offset
 * TPS : fix uninitialized variables (#2300), fix wrong behaviour with negative coordinates  (#2615)
 * gdalgeoloc.cpp : Fix crash in GDALCreateGeoLocTransformer if X_DATASET, etc... cannot be opened (#2434)
 * warper: Prevent crashes when srcAlphaBand and dstAlphaBand are wrong
 * Fix tiling in gdal_grid and output of geotransform when -txe and -tye not specified (#2508)
 * warper: Wait for the threads to complete before leaving GDALWarpOperation::ChunkAndWarpMulti() (#2518)
 * warper: When warping an RGBA image whose borders have alpha=0, avoid writing alpha=255 with bilinear, cubic, cubic spline resampling
 * warper: Properly set a resample window size for Cubic Spline kernel. (#2414)
 * gdalsimplewarp.cpp: fix pointer array allocation (#2586)

Utilities:
 * gdal_lut.py: New for 1.6.0. Sample app applying a greyscale lookup table
 * gdal_polygonize.py : New for 1.6.0
 * gdal_proximity.py : New for 1.6.0
 * gdal_sieve.py: New for 1.6.0
 * densify.py: New for 1.6.0. A generic Translator class for ogr2ogr-like operations that can be easily overridden for special translation operations
 * gdalflattenmask : New utility to merge regular data bands with the mask bands, for applications not being able to use the mask band concept. (Not compiled by default)
 * gdal2ogr: New for 1.6.0. to create an OGR datasource from the values of a GDAL dataset; May be useful to test gdal_grid and generate its input OGR file (Not compiled by default)

 * Fix crash in gdalenhance
 * Add -nln switch for gdal_contour 
 * gdalgrid: Fixed zero search radius handling in nearest neighbor interpolation method.
 * gdalgrid: Added support for data metrics (minimum, maximum and range) computation.
 * gdalgrid: Added spatial filter support applied on the OGR data source
 * gdalgrid: Added ability to read values from the attribute field using the "-zfield" option.
 * gdalgrid: fix crash on features with NULL geometry or when no point geometry is found on a layer (#2424)
 * esri2wkt.py: Fix esri2wkt for NG python bindings (#2548)
 * Build testepsg utility by default when OGR is enabled (Ticket #2554).
 * gdaltranslate: new -expand rgb|rgba option to make color table expansion
 * gdaltindex: Use correct index variable name
 * gdal2tiles.py: Bug fix: switched axes in BoundingBox of tilemapresource.xml.
 * gdal2tiles.py: Bug fix: wrong Origin in tilemapresource.xml.
 * gdal2tiles.py: New version of GDAL2Tiles (SoC 2008 - GDAL2Tiles Improvements)
 * gdal_retile.py: Some minor enhancement optionally storing the  georeferencing data of created tiles in a csv file
 * gdal_vrtmerge.py: add support for NODATA
 * gdalinfo: Don't show RAT if -nomdd is used.
 * gdalinfo: Display checksums on overviews when -checksum is specified
 * gdalinfo: Display whether the mask band has overviews
 * ogr2ogr: reset -gt to 1 with -skipfailures, document -gt (#2409)
 * ogr2ogr: Output error messages on stderr to be consistant; Make error message about failed reprojection more clearer (hopefully); Advertize the use of -skipfailures in error message (#2588)
 * nearblack: Add support for scanning from top and bottom as well as from the sides.
 * Prevent crash in gdalwarpsimple utility and in GDALSimpleImageWarp() when source dataset has no raster band
 * gdal_rasterize: check that coordinates systems match (Ticket #1937)
 * gdalwarp: Add cutline support

Various drivers:
 * Reports GDAL_DCAP_VIRTUALIO=YES for drivers supporting it (#2193)
 * Add warnings in CreateCopy() methods for drivers not supporting color tables (#1939)
 * Simplify and harmonize how ESRI world file extensions are handled for BMP, GIF, JPEG, PNG and GTiff drivers (fix #1734)
 * Windows : enable bigtiff by default when using internal libtiff (#2257)
 * Added plugin building support for ECW, MrSID, HDF5, NetCDF, FITS and SDE drivers.
 * fix case of capabilities xml elements to match properly (#2322)
 * Add ALPHA creation option in the list of creation options

AAIGrid Driver:
 * Re-fix nodata test when determining AAIGrid data type (Ticket #2107).
 * fix yllcorner computation (#1794)
 * mark driver as supporting virtualio.
 * Fix wrong data type used to read the source band AAIGCreateCopy (#2369)
 * Add DECIMAL_PRECISION creation option for AAIGRID (#2430)

ADRG driver:
 * Initialize PAM to avoid creating .aux.xml file when gdalinfo an ADRG dataset
 * Prevent opening in update mode && fix reading of blocks in creation mode
 * Prevent error message coming from ADRG driver when trying to open in update mode a non-existing dataset
 * Avoid error reporting and subsequent failure on some DIGEST files where the last record ends in a non-standard way

BLX Magellan Topo driver:
 * New for 1.6.0 (#2254 and #2570)

BSB driver:
 * Add support for alternate palettes via config option
 * Fix Valgrind warning about read of uninitialized memory; Replace a CPLAssert by a test in case of corrupted dataset; Remove static buffer in BSBReadHeaderLine to improve thread-safety
 * Update BSB write support to use VSIF*L API (still disabled by default); fix palette handling (last color entry was lost); add GCP/Geotransform writing

COSAR driver:
 * Initialize integral variables to prevent failure of test condition in case file read operation fails; clean signed/unsigned mismatch warning.
 * Additional tests to protect against corrupted datasets

DIMAP driver:
 * Fix use of static CPL buffers
 * Implement GetFileList() and support for opening directory for DIMAP format
 * Add metadata at the raster band level by reading the Spectral_Band_Info tag

DODS driver:
 * Add using namespace libdap for version 3.8.2 (#2404)

DTED driver:
 * Add the GDAL_DTED_SINGLE_BLOCK config option to make a single block of a whole DTED file. This can speed-up a lot scanline oriented algorithms (#1909)
 * Add support for DTED products strictly following MIL-D-89020 that was buggy
 * Fix compilation without CPL
 * Improve thread safety

ECW driver:
 * Fix memory leaks (#2210)
 * Be more careful deciding what geotransforms to ignore (#1935)
 * Rename ecw plugin gdal_ECW_JP2ECW.so/dll (#2320)
 * Properly set default nPixelSpace and nLineSpace in ECWRasterBand::IRasterIO().
 * Added pixel data type checking in ECWCreateCopy() (#2593).

EHDR driver:
 * Port EHDR driver to large file API (by apetkov) (#2580)

EIR (Erdas Imagine Raw format) driver:
 * New for 1.6.0

ENVI driver:
 * fix problems with old/new state plane zone codes (#2227)

ERS driver:
 * add support for HeaderOffset keyword (#2598)

FAST driver:
 * Order the GCP in TL, TR, BR, BL order to benefit from the GDALGCPsToGeoTransform optimization
 * Add support for Euromap FAST datasets for IRS-1C/IRS-1D PAN/LISS3/WIFS (#2329)
 * Fix USGS projection decoding for EOSAT FAST format Rev C (#2381)
 * Add support for detection of FAST IRS P6 and CARTOSAT-1 band filenames

FITS driver:
 * Fix crash in FITS when dataset has metadata; Fix 2 minor Valgrind warnings (#2396)
 * Fix crash on int32 test case in fits.py for 64-bit GDAL build (#2579)

GeoRaster driver:
 * New for 1.6.0

GFF driver:
 * Close file pointer in dataset destructor

GIF driver:
 * Disable opening of large files which hang GDALOpen() (#2542)

GRASS driver:
 * Fix obvious memory leaks in GRASS driver (#2537)
 * fix to use G_free() instead of free() (#1983)

GRIB driver:
 * Moved from spike to trunk: grib now standard, but support --without-grib option

GSAG driver:
 * Prevent crash on huge number of rows
 * Prevent Valgrind warnings on bogus short GSAG files
 * Major update to correct upside problems, removing Create (#2224, #1616, #2191)

GS7BG driver:
 * Fixed geotransormation matrix calculation (#2132)
 * Properly read the header on big-endian system.
 * fix bigendian support (#2172)

GTiff driver:
 * Add support for reading and writing embedded nodata masks of a TIFF file (TIFFTAG_SUBFILETYPE=FILETYPE_MASK)
 * Added SUBDATASETS support
 * Add the ability to create files with PHOTOMETRIC=PALETTE.
 * Add the ability to update palette on existing files (#2421)
 * Enforce PROFILE properly for Create (#1527)
 * Add support for reading a CMYK TIFF. By default, it will be opened with the RGBA interface (CMKY->RGBA translation done by libtiff. Said to be *very* crude), unless 'GTIFF_RAW:' is specified before the filename. In that later case, the CMYK bands will be presented. Also add support for translating to a CMYK TIFF too : the source dataset must have CMYK bands. No colorspace translation is done
 * Internal libtiff : refresh from upstream libtiff
 * Added GTiffSplitBitmapBand to treat one row 1bit files as scanline blocks (#2622)
 * Don't use GCS if it is less than 1 (#2183).
 * Modified so that the RGBA interface is not used for YCbCr mode JPEG compressed data.  Set JPEGCOLORMODE to RGB at the point a directory is read to avoid error report if doing it later during writing.  This fixes the GDAL 1.5.0 issues with writing YCbCr JPEG compressed data (#2189).
 * Fix memory leak in gt_wkt_srs.cpp
 * Prevent crash in GTiff driver in case we cannot GDALOpen the newly create-copied file
 * Fix buffer overflow when calling GTIFDirectoryInfo in GTIFGetOGISDefn (#2372)
 * add special handling for 24bit data which gets byteswapped by libtiff (#2361)
 * Replace hard-coded 3 byte increment by iPixelByteSkip in int24 gtiff decoding (#2361)
 * Cleaunup frmt/gtiff directory by removing unused files. Move TIFF_WriteOverview to gt_overview.cpp. Create gt_overview.h to declare TIFF_WriteOverview and GTIFFBuildOverviewMetadata
 * Add a ENDIANNESS creation option to GTiff driver for debug purpose mostly
 * Fix writing of blocks on TIFF files in non-native endianness (#2398)
 * Push extra bands of pixel interleaved data into block cache (#2435)
 * Improve integration with PAM metadata loading and saving (#2448)
 * Fix potential buffer overflow in GTIFAngleStringToDD (commited in upstream libgeotiff) - #2228
 * Fix GTiffOddBitsBand::IWriteBlock with GDT_UInt16/32; Error properly with GDT_Float32; Support creating files with NBITS>8; Handle NBITS=1 IReadBlock/IWriteBlock in GTiffOddBitsBand; Prevent subtle IReadBlock/IWriteBlock round-tripping bug for NBITS<8 (#2360)
 * Set the TIFFTAG_COMPRESSION compression before asking the default strip size, so that in the case of JPEG compression, the correct strip height is selected (either 8 or 16). Tested with libtiff-3.8.2 and internal libtiff
 * Prevent crash on tiff_ovr_9 when JPEG-In-TIFF support is not built
 * In GTiffDataset::Create(), set TIFFTAG_JPEGCOLORMODE=JPEGCOLORMODE_RGB when creating a TIFF with COMPRESS=JPEG and PHOTOMETRIC=YCBCR; In Crystalize(), backup the value of TIFFTAG_JPEGCOLORMODE and set it again after writing the directory (#2645)
 * Handle more gracefully the case where we open or create a TIFF file with a compression method not built in libtiff (use of TIFFIsCODECConfigured)
 * Don't fail when TIFFTAG_JPEGCOLORMODE tag cannot be read 
 * IPP libjpeg compatability changes (#2606)
 * ensure zip/jpeg quality is preserved in crystalize. (#2642)
 * support handling nodata via pam/aux mechanisms (#2505)
 * ensure TIFFFlush() is called in FlushCache() (#2512)
 * Replace Crystalize() by SetDirectory() in GTiffDataset::IBuildOverviews() so that 2 consecutive ds.BuilOverviews() calls work without needing to close and reopen the dataset in between
 * Prevent crash when disk is full
 * Add detection of big-endian bigtiffs when BIGTIFF_SUPPORT is *NOT* defined
 * Add missing ScaleAtCenter parameter for Hotine Oblique Mercator when writing the geotiff keys
 * Added logic to pre-clear geotiff tags when updating a file (#2546)
 * Add ExtraSample tag in overviews too (#2572)
 * Fix handling of non-degree angular units (#601)
 
GXF driver:
 * Add GXFRasterBand::GetNoDataValue (fix #835)
 * Avoid crash on bogus GXF file

HDF4 driver:
 * add support for projected NRL products (#2225)
 * make a block consist of several scanlines for SDS case to speed up (#2208)
 * Add H4ST prefix to names of HDF4SubdatasetType enumeration values. (#2296).
 * Remove useless and dangerous redefinition of sincos in HDF-EOS (#2494)
 * Added compatibility definitions for HDF 4.2 library (#2609)
 * Read HDF raster images containing in HDF-EOS datasets (#2656)

HDF5 driver:
 * Fix minor memory leaks and one incorrect memory usage in HDF5
 * implement support for 1.8+ hdf library versions (#2297)

HFA driver:
 * Avoid possible uninitialized variable usage in HFAWriteXFormStack()
 * Fix BASEDATA count value (preceding pointer) at 1 (#2144)
 * Incorporate generalization of EPT_f32 reduced precision handling (#1000)
 * Add missing creation options, fix doc to refer to COMPRESSED instead of COMPRESS (#2167)
 * remove static buffer to improve thread-safety
 * Read invalid blocks as nodata value if available.  Create new files with all blocks marked invalid.  Support writing to invalid blocks as long as there is already a pointer to valid data.  (#2427)
 * add support for writing 1, 2 and 4 bit data (#2436)
 * Attempt to preserve PROJCS name in sMapInfo.proName, and to capture it as the PROJCS name when reading.  This will hopefully preserve symbolic names like NAD_1983_StatePlane_Ohio_South_FIPS_3402_Feet instead of replacing them with something generic like "Lambert_Conformal_Conic" (#2422).
 * avoid reducing array sizes if writing them in random order (#2427)
 * Prevent writing out cached information after the file has been closed.  Loosely related to (#2524).
 * Error out gracefully and early on attempts to write to readonly file (#2524)
 * Open the dependent file(s) with same permissions as master (#2425)
 * Fix crash in HFACompress::compressBlock when compressing random data with m_nDataTypeNumBits >= 16 (#2525)
 * Fix reading of a non-initialized compressed HFA file (#2523)
 * Add FORCETOPESTRING, and ensure ProjectionX applied to all bands (#2243)
 * Added support for unique values color tables (#2419)

HTTP driver:
 * Fix HTTP driver when falling back to /tmp (#2363)

IDRISI driver:
 * Force min/max calculation on IWriteBlock
 * remove conditional from CreateColorRamp() call
 * Fix #2444 (lat/long) and #2442 (uppercase file extension)

ILWIS driver:
 * Modified to use VSI*L API for reading and writing.  Modify ReadBlock() so that data written on newly created datasets can still be read back.
 * Fix memory leaks in ILWIS driver
 * Avoid writing an ILWIS file to disk when it is a src_dataset. Design of responsible class (IniFile) is simplified, to prevent this from happening unintentionally.
 * Spend extra effort to find the most compact GDAL data-type for storing the ILWIS data; Added missing ILWIS-system domains to the list; Initialized variables before they are used; Added comments to code.
 * Solved unwanted rounding in the pixel size, that resulted in wrong map size calculation.

INGR driver:
 * Support splitting bitonal images into scanline blocks too (#1959)
 * Fix compilation of INGR driver on big-endian target (#2613)

ISIS3 driver:
 * fix earth model, already in meters, not kilometers! (#2321)
 * ensure we adjust first tile offset depending on band (#2573)

ISO8211 driver:
 * corrections to handle double byte attributes better (#1526)

JP2KAK driver:
 * Add VSI*L reading and writing (vsil_target) (#2255)
 * Remove KAKADU4 related ifdefs, we now assume at least KAKADU 4.2.
 * disable JPIP - not working with modern Kakadu

JPEG driver:
 * Added support for reading georeferencing from .tab files. Fixes #682.
 * Add support for reading images in CMYK and YCbCrK color spaces (#2443)
 * make sure bHasDoneJpegStartDecompress is set in Reset() (#2535)
 * Added fill/flush support compatible with IPP libjpeg (#2606)

LCP (FARSITE) driver:
 * New for 1.6.0
 
L1B driver:
 * Added support for NOAA-18(N) and METOP-2 datasets; tiny code refactoring.
 * L1B : add auto guess of data format when it is 2 spaces or empty string
 * The GAC GCPs are not tied to the center of pixel.
 * Serious code rewriting in order to read datasets withour archive header

MEM driver:
 * Avoid failure when doing mem_driver->Create('MEM:::')

MrSID driver:
 * Use VSI Virtual File API in MRSID DSDK I/O routines. MrSID reading now
works through the VSI calls as any other GDAL driver.
 * Added support for MrSID DSDK 7.x (#2410)
 * Use int 32 types instead of long types for LTI_METADATA_DATATYPE_UINT32 and LTI_METADATA_DATATYPE_SINT32 metadata (#2629)

MSG driver:
 * Fixes and improvements to enable compilation with GCC 4.x (Ticket #2168).

NDF driver:
 * Support NDF2 files in other than the current directory (#2274)
 * Added somewhat improved coordinate system support (#2623)

NetCDF driver:
 * Handle very large attributes properly (#2196)
 * NETCDF plugin name doesn't correspond to the loader entry name causes an error in AutoLoadDrivers (#2464)
 * Fix allocation of panBandZLev (#2582)
 * Fix accidentally too large memory allocation (#2591)
 * Do not report char variables as subdataset (#2599)
 * Fix LAEA projection (#2584)

NITF driver:
 * Add support for RPB and IMD files
 * Handle NITF JPEG-compressed image with data mask subheader (IC=M3) multi-blocks (#2364)
 * Implement SetProjection for NITF (#2095)
 * Added support for decoding 12 bit images (#2532)
 * Added support for writing TEXT segments in CreateCopy()
 * Added support for writing arbitrary user defined TREs
 * Fix #2249 : shift when writing NITF color table with nColors < 256
 * Prevent crash with LUT entry count > 256
 * Disable unnecessary VSIFFlush() calls that slowdown writing on some systems
 * Apply untested RPC00A remapping (#2040)
 * Fix #2135 by narrowing workaround test made for #1750
 * Prevent crash on NITF file without image segment (#2362)
 * Additionnal fix for handling 1-bit uncompressed NITF images with NITF_IC=NM  (#1854)
 * Set IREP=RGB implicitely when the first 3 channels of an image are R,G,B (#2343)
 * Allocate one extra byte for the NULL terminating character when reading TEXT data in NITF file (#2366)
 * Fix 'adding BLOCKA TRE precludes writing IGEOLO' (#2475)
 * Add GDAL_DMD_CREATIONOPTIONLIST for NITF
 * Prevent crash when using a bad value for TRE creation option
 * Fallback to pam info for nodata (#2596)

PAUX driver:
 * Check for either generated spelling of AuxiliaryTarget (#2219)

PCRaster driver:
 * Add overview support
 * Added support for CSF version 1. Updated nodata values to be equal to gdal's internal ones.

PDS driver:
 * Add support for # style comments (#2176)
 * Improve PDS dataset identification & fixes image segment offset (#2397)
 * Add LSB_SIGNED_INTEGER

PGCHIP driver:
 * Many memory leak fixes & cleanups, add an extra parameter '%name=my_name' for handling several rasters in the same table, add support for reading&writing geotransform

PNM driver:
 * Fix potential buffer overflow in case of bad PNM file
 * Fix logical tests in PNM Identify (bug #2190)

RAW drivers:
 * manage RawRasterBand NODATA values at PAM level
 * RawRasterBand : add extra parameter bOwnsFP to enable the RawRasterBand to take ownership of the fpRaw so as to close it properly in its destructor
 * Fix crash in rawdataset.cpp with pixeloffset=0 (#2576)

RMF driver:
 * Do not forget to swap block size/offset table on big-endian archs. (#2169)
 * Added support for reading and writing extended header..
 * RMF driver can crash / corrupt stack when importing projection from Panorama (#2277)
 * Fixed error checking code returned by color table read function.
 * Added support fo reading big endian variant of the RSW files.
 * Report units and dataset statistics (#2670)

RPFTOC driver:
 * Enable external overview building on RPFTOC subdatasets
 * Use new proxy API instead of RPFTOCGDALDatasetCache
 * Initialize PAM for RPFTocDataset
 * Implement GetFileList() for RPFTOCDataset and RPFTOCSubDataset

RS2 driver:
 * Added projection reading
 * Updates to RADARSAT-2 driver to account for tiled GeoTIFF images.
 * Capture all files for GetFileList().
 * Support selecting directory as well as product.xml to open the dataset.
 * Various other enhancements

SDTS driver:
 * Prevent infinite recursion in SDTSRasterReader::GetBlock when CEL0 file is truncated
 * SDTS DEM : Read metadata in the IDEN file

SGI driver:
 * Implemented SGI write support (always RLE)
 * Fix SGI driver that misidentified SRTMHGT files as SGI files (#2289)

Terragen Driver:
 * Fix overflow in implicit constant conversion (#2119)

Terralib driver:
 * New for 1.6.0

TSX driver:
 * Added support to extract GCPs from XML metadata for TerraSAR-X SSC products.
 * Provide an error message if the sceneInfo tag cannot be found in the TerraSAR-X image metadata.
 * Fix lat/lon inversion (whoops, #2565); expose additional metadata items

USGSDEM driver:
 * mark NTS and INTERNALNAME as legal options
 * make parser more permissive (#2348)
 * add missing ZRESOLUTION creation option in GDAL_DMD_CREATIONOPTIONLIST
 * USGSDEM: add precisions to creation options documentation; check that source dataset dimensions are at least 2x2 for CreateCopy()
 * USGSDEM: fix USGSDEMDecToPackedDMS when input is very close to an integer degree value

VRT driver:
 * Use VSIF Large API in VRTDataset::Open to fix #1070
 * recover from failure to create transformer (#2240)
 * Added LUT based transformation support to the VRTComplexSource
 * Extend the output of <SimpleSource> in a forward and backword compatibly way, and make use of GDALProxyPoolDataset when possible
 * Add the <ColorTableComponent> element to <ComplexSource> to do color table expansion in the VRT
 * Fix failure when attempting to read a warped VRT made from a 3-band dataset with -dstalpha option (#2502)
 * In VRTDerivedRasterBand::IRasterIO() don't call RasterIO() on sources with 0,0 for nPixelSpace and nLineSpace as most sources, except VRTSimpleSource, don't translate them.
 * Allow empty category in VRT rasterband (#2562)
 * Use nodata in VRTKernelFilteredSource::FilterData (#1739)
 * Fix VRT average resampling when resampling factor > 100% (#1725)

WCS driver:
 * Improvements to identify Band field name
 * More fiddling with GetCoverage() bounding boxes.  Avoid half pixel bounding box shift south east.  When using GridOffset/GridStep values expand the bounding box out by 1% of a pixel to avoid "on edge" rounding issues.
 * Strip namespaces off DescribeCoverage response (early), and add a bug
workaround for GeoServer WCS 1.1 responses.
 * Correct wcs 1.1 band identification logic
 * URL encode format and coverage name.  Improve error recognision.
 * GridOffset should be top left corner of pixel center oriented bounds

WMS driver:
 * Add ClampRequests setting (#2450)
 * Fix WMS driver to make it work when ReadBlockFromFile() must deal with blocks already in block-cache but that are not the band to fill (#2647)
 * Add a <Timeout> option (#2646)

XPM driver:
 * Prevent crash when opening an XPM file with large file API


== OGR 1.6.0 - Overview of Changes ==

General: 
  * RFC 21: OGR SQL type cast and field name alias (#2171)
  * Added support for outline color in OGRStyleLabel (#2480)
  * Added support for symbol outline color in OGR Style Strings (#2509)
  * Added geometry type merger
  * Added SetEquirectangular2()
  * Added SetLinearUnitsAndUpdateParameters() to C API
  * Add support to translate OGRPolygon to OGRMultiLineString
  * Add a segmentize() method to OGRGeometry to modify the geometry such it has no segment longer then the given distance; add a -segmentize option to ogr2ogr
  * Many performance fixes in OGRGeometryFactory::organizePolygons (#1217, #2428, #2589)
  * Changed OGRFeature::GetStyleString() to return the value of the OGR_STYLE field if no style string have been specified.
  * Ensure OpenShared sharing is only with same thread (#2229)
  * ogrfeaturestyle : OGRSTBrushAngle parameter should not be georeferenced.
  * Strip whitespaces at the start and end of parsed pairs of style elements in OGRStyleTool::Parse(). As per #1413.
  * Remove empty linestrings from multilinestring objects
  * Allow 'POINT EMPTY' in WKT (bug #1628)
  * Fix OGRGeometryCollection::getCoordinateDimension() (#2334)
  * Make OGRLineString::importFromWkb and OGRPolygon::importFromWkb with EMPTY geometries
  * Implement IsEmpty() for all geometries without using GEOS (for speed purpose, and also because GEOS 2.2.3 is buggy with multipolygons with empty polygon inside); Make exportToWkt() export a valid WKT when multipoints/linestrings/polygons have an empty geometry inside
  * Reintroduce OFTWideString and OFTWideStringList but mark them as deprecated (#2359).
  * Fixed segmentation fault in swq_select_finish_summarize when SQL query issued on layer without any attributes like empty shapefile (Ticket #2358).
  * Fix crash in OGRDataSource::ExecuteSQL with an empty SQL query (#2386)
  * Make OGRLayer::FilterGeometry more restrictive in the geometries it selects (#2454)
  * OGRStyleVector class and related stuff has been removed (#2070).

  * Fixed OGR SQL to properly escape single quotes in string literals (Ticket #2220).
  * Prevent an OGR driver from being registered several times (#2544)

Utilities: 
 * Start on a dissolve utility based on ogr2ogr
 * Add --version and --licence options for OGR CLI utilities

OGRSpatialReference: 
 * RFC 20: Axes methods
 * Upgrade to EPSG 6.17
 * Added support for "International Map of the World Polyconic" and "Wagner I-VII" projections.
 * Add EquidistantCylindricalSphere and GaussLabordeReunion (#2134)
 * Fix exportToProj() translation for OSGB36 (#2160)
 * ogr_srs_panorama.cpp : Fixed search in ellipsoid list
 * ogr_srs_pci.cpp : List of ellipsoids updated
 * Treat spherical mercator 1SP similarly to normal mercator 1sp (proj #9).
 * Ensure Clear() clears the bNormInfoSet flag and use Clear() from the various import methods to wipe old state (#2533).
 * add import/export for MITAB CoordSys
 * Added declarations for OSRImportFromMICoordSys()/OSRExportToMICoordSys(); make OSRImportFromPanorama()/OSRExportToPanorama() externally visible again.
 * Ensure rectified_grid_angle gets stripped for HOM projections (#2575)
 * ogr_srs_esri.cpp: Correct test of iRGAChild (#2575).
 * Recent EPSG releases seem to use PolarLongOrigin instead of ProjCenterLong for the Krovak projection parameters.  Handle either (#2559).
 * Test that input pointer is not NULL in OGRSpatialReference::importFromWkt().

AVC driver:
 * Make AVCE00 a distinct driver
 * Update from AVCE00 master, includes the fixes for #2495 (GCC warnings)
 * Detect compressed E00 input files and refuse to open them instead of crashing (#2513)
 * Avoid scanning the whole E00 input file in AVCE00ReadOpenE00() if the file does not start with an EXP line (#1989)

BNA driver:
 * Fix crash when trying to write features with empty geometries
 * Add support for Unix End-Of-Line characters on Windows

CSV driver:
 * Add support for writing the geometry of features through the new GEOMETRY layer creation option
 * Allow to define field width via .csvt text file (bug #2142)
 * Handle more gracefully CSV files with an empty column title (#2538)

DGN driver:
 * add some experimental linkage testing

DODS driver:
 * add using namespace libdap for version 3.8.2 (#2404)

Geoconcept Export driver:
 * New for 1.6.0

GeoJSON driver:
 * Fixed GeoJSON driver crash when writing features with null geometry (#2212)
 * GeoJSON: enabled read/write of 25D geometry types.
 * Improved GeoJSON driver to gracefully handle JSON strings that do not encode GeoJSON content.
 * Support GeoJSON 1.0 Spec CRS 'link' and 'name' members. (#2665)

GPX driver:
 * XML Datetime can be expressed without explicit timezone mention
 * <extensions> is valid inside <rtept> and <trkpt> too
 * Add support for GPX 1.0 reading
 * Handle degenerate and NULL geometries in creation mode
 * Remove noisy CPL_DEBUG message when GPX driver built without Expat and when the input file doesn't look like GPX (#2394)
 * Prevent GPX and KML drivers to read too much of a non GPX/KML file (#2395)
 * GPX writer: Remove leading spaces for a numeric field (#2638)

GML driver:
 * Support reading GML 3 posList geometry (#2311)
 * Add logic to potentially track geometry type (mostly for NAS just now)
 * Fix #2141 : GML driver recognizes improperly strings as integers
 * Do geometry element name test (IsGeometryElement) case sensitive to avoid false positives on property names, and such (#2215).
 * Fix memory bug in OGRGMLLayer::GetNextFeature() when using attribute filter (#2349)

GMT driver :
 * Remove spaces from numeric field values before writing to avoid unnecessary quoting.

GRASS driver:
 * Call Vect_close() in the OGR GRASS driver (#2537)

INGRES driver:
 * New for 1.6.0

Interlis 1 driver:
 * Support for SURFACE polygons spread over multiple OBJECTs Polygonize on demand. Generation of area layer
 * Fix a crash (#2201)
 * Fix memory leaks & apps/test_ogrsf correctness in OGRILI1 (#2203)
 * Prevent crash in OGRILI1DataSource::Open with an empty string (#2335)
 * Fixed column order detection for some Interlis 1 models (#2595)

Interlis 2 driver:
 * Fix memory usage and leaks in OGRILI2 (bug #2203)
 * Fix logic to detect ILI2 datasets (#2516)

KML driver:
 * Updated KML write driver to support KML v2.2.
 * Added support for "SchemaData" - typed KML fields that maintain feature data.
 * Support of date types, written out as strings (#2264)
 * Added automatic coordinate system transformation to WGS84 (the only CS that KML recognizes). (#2271)
 * Report XML parsing error in KML driver in a similar way it's done in the GPX driver
 * Speedup detection of KML documents
 * Use VSI Large File API
 * Corrected case on schemaUrl attribute and added the id attribute to the schema element. (#1897)

MITAB driver:
 * Upgraded to current dev version of MITAB - includes a number of TAB StyleString improvements
 * Support font point outline color

MySQL Driver:
 * Fix memory leaks in MySQL driver
 * Fix crash with very long WHERE clause in MySQL driver
 * Use assignSpatialReference for read features
 * Fix SRS cache in FetchSRS()
 * MYSQL: Add backquotes around table and column names to enable the use of reserved keywords (#2315)
 * Fix reporting of capabilities for OGRMySQLResultLayer
 * return proper results for various writing capabilities (#2184)

NTF driver:
 * Update for new meridian and strategi products (#2600)

OCI driver:
 * Fixed memory leaks in OCI driver reported by Linda Thompson (#2120)
 * Support for OCI + VRT to access non spatial data (#2202)
 * Prevent from calling CPLError when SDO_GEOMETRY is missing (non spatial) (#2202)
 * Added support for fields of type DATE and TIMESTAMP [WITH [LOCAL] TIME ZONE] as OFTDate and OFTDateTime.
 * An extra space is needed for the decimal separator when retrieving the numeric fields (#2350)
 * Improved OCI driver to query spatial extent of layer using SDO_GEOM_METADATA for better performance (Ticket #543).
 * OCI: Filter out MDSYS.CS_SRS entries with NULL value of WKTEXT.
 * add compound and stroked-arc read support

PG (Postgres/PostGIS) Driver: 
 * Add the ability to specify a list of tables to be treated as layers with the 'tables=' connection string option (#1699)
 * Add SPATIAL_INDEX creation option to create GIST index. Turned ON by default (#959)
 * Add support for listing and correctly fetching geometry type of inherited spatial tables (#2558)
 * Add support for Postgis tables with multiple geometry columns (#1476)
 * Fixes to Postgres binary cursor mode and improvement/fixes to data types handling (#2312)
 * Implement efficient GetFeatureCount, SetSpatialFilter and GetExtent for OGRPGResultLayer
 * Apply spatial filter in OGRPGDataSource::ExecuteSQL()
 * Make binary cursor work with non-PostGIS geometry column
 * Fix memory leaks
 * Fix write outside of allocated buffer in OGR PG driver (#2303)
 * Use assignSpatialReference for read features
 * Fix geometry filter when there is no PostGIS geometry column
 * Fix getting the PK of a table with PostgreSQL <= 7.3; Fix CreateFeatureViaCopy when geometry column is not PostGIS geometry
 * Use the 'auth_srid' to avoid mismatches between OGR and PostGIS WKTs of EPSG codes (#2123)
 * Fix reporting of capabilities and handling of spatial and attribute filters by OGRPGResultLayer
 * Add PG_USE_POSTGIS to be able to disable PostGIS for debug purpose
 * Re-enable PQsetClientEncoding but set it to UNICODE now that the driver advertizes OLCStringsAsUTF8
 * Replace use of risky sprintf by CPLString to avoid potential buffer overflows
 * In non PostGIS mode, skip tables of schema 'information_schema'
 * Allow VACUUM through ExecuteSQL() without a transaction (#2619).

PGEO driver:
 * correct testcapability results (#2601)
 * treat type 50 geometry as SHPT_ARC (#1484)

SDE driver:
 * Versioned editing/write support for SDE.

SQLite driver:
 * Added support for geometry_columns, and WKB support
 * Added preliminary FGF to geometry support
 * Added spatial_ref_sys support
 * Added preliminary support for spatialite geometries

SHAPE driver:
 * CreateField() now works on populated layers (#2672)
 * Cleanup to remove unused old classification code for multipolygons (#2174)
 * Fix error class in VSI_SHP_Error (#2177)
 * Fix crash with polygon with nParts == 0
 * Change SHAPE driver to return a NULL geometry instead of an empty OGRMultiPoint, OGRMultiLineString and OGRMultiPolygon (bug #2217)
 * Fix crashes on corrupted geometries (#2218 and #2610)
 * Fix crash when dealing with unhandled field types in shape driver, in DEBUG mode (#2309)
 * Add case for wkbMultiLineString and 25D in OGRShapeLayer::CreateFeature
 * Make SHPWriteOGRObject write a SHPT_NULL object for empty geometries and handle correctly multigeometries with empty geometries inside
 * Make sure field type set to OFTDate when OFTDataTime requested (#2474)
 * Implement OGRShapeDataSource::DeleteLayer() (#2561)

S57 driver:
 * Ensure SOUNDG in multipoint form is MultiPoint25D not 2D.
 * Print out contents of OGR_S57_OPTIONS evvironment variable if set (for debug
purposes).
 * Correct control for applying updates, now done in Ingest method.

VRT driver:
 * carry style string through VRT layer
 * Pass the envelope of the geometry as the spatial filter in the sub-query (#2214)
 * Add "shared" attribute on SrcDataSource to control sharing.  Default to OFF for SrcLayer layers, and ON for SrcSQL layers.  This endevours to avoid conflicts of layer state. (#2229)

XPlane/Flightgear driver:
 * New for 1.6.0 



== SWIG Language Bindings ==

SWIG General :
 * Added GetHistogram
 * Added SetLinearUnitsAndUpdateParameters
 * Added GetSubDatasets method on Dataset
 * Added SetEquirectangular2
 * Cast returned value to OGRDriverShadow in GetDriver method instead of OGRLayerShadow
 * Make it possible to skip adding the inline C functions into the wrapper
 * Fix SWIG ReadRaster_internal and DSReadRaster_internal may crash (#2140)
 * Modify GeneralCmdLineProcessor() to recognise that a <= 0 return result is special and means NULL should be returned indicating a need to terminate the calling application.
 * Added SetMetadataItem/GetMetadataItem
 * Added gdaltransformer wrapper for RFC 22
 * implement the BuildFromEdges function #2380
 * Added ComputeProximity
 * Added GDALRegenerateOverviews
 * Added GetFileList
 * Added GRA_Lanczos
 * Added gdal.Polygonize()
 * expose GDALDestroyDriverManager() to improve leak detection
 * Added RasterizeLayer() and SieveFilter()
 * If we receive an odd array type in BandWriteArray(), cast the array to float64 which we do support (#2285). 

SWIG C# related changes: 
 * Implement GDALProgressFunc callback for C# (fix for #2122)
 * Fixed that passing null as the options parameter of Driver.CreateCopy causes access violation (#2185).
 * Added GDALCreateCopy sample application
 * Support for signing the GDAL C# assemblies (#2186) 
 * Added raster specific tests
 * Reworked the wrapper implementation
 * Added the bandMap parameter to the C# Dataset.ReadRaster and Dataset.WriteRaster API.
 * Added a C# sample to demonstrate the GDALDatasetRasterIO operations.
 * Added Band.GetHistogram to the C# bindings
 * Sample application for Band.GetHistogram.
 * Added the GDALAdjustContrast sample to demonstrate the image correction at the C# side.
 * Added Dataset.GetGCPs, Dataset.SetGCPs and GCPsToGeoTransform in the C# bindings (bugs #2426, #1986 and #1677
 * Added support for using OGR.Layer in Gdal.Polygonize
 * Changed the behaviour to use OSR.SpatialReference and OSR.CoordinateTransformation instead of defining the same classes in the OGR namespace
 * Changed the scope from internal to public of the required functions

SWIG Python related changes: 
 * Fix layer __getitem__ bug (#2187)
 * add some sugar to ogr.DataSource.DeleteLayer to be able to take in either an index or a layer name.  If you give it a name, it *will* loop through all of the layers on the datasource.  This might be expensive depending on the driver.
 * add date/time fetching support to the generic GetField implementation... note this is not real 'datetime' support yet
 * a typemap for taking in lists of GDAL objects #2458
 * don't always return 0 for OGRErrs #2498
 * Added GetDefaultHistogram() with Python implementation
 * support for mingw Windows builds
 * Link with gdal_i.lib instead of gdal.lib when building with MSVC compiler. (#2578)

SWIG Perl
 * Added a more verbose description to the error message if projection method test fails. Skip testing parameters of International Map of the World projection since it fails (a bug?).
 * driver's create method's 2nd parameter, if given, is a listref
 * Support Cygwin by adding -lstdc++ to LIBS if OS is cygwin
 * Add GetDriver method as an alias to _GetDriver for DataSource. This fixes an unnoticed side-effect of rewrapping GetDriver for root class OGR.
 * force name to be a string for _GetLayerByName and make default for name 0
 * fix Layer::Schema
 * use perl hash also for fields in schema (the new API was not really implemented), add Schema method also for Feature
 * croak in Geometry::create unless type, wkt, wkb, or gml given
 * do not call UseExceptions when booting OGR wrappers since it is only done once when booting GDAL (of which OGR is a part), do not include inline functions from cpl_exceptions.i into OGR wrappers
 * add exception support as for OGR
 * use geometry factory methods in Geometry::create; accept also only coordinate parameters (i.e. auto-add 0 if needed) in Point method for Point type
 * Add wrappers for field types datetime and lists. Do not use the overloaded (field name) versions of the get/set functions.
 * GetField and SetField methods, which check for goodness of the field (name, index) and support dates, times, datetimes, and lists. In Row and Tuple the field value may be a listref.
 * Support HEXWKB in Geo::OGR::Geometry::create.
 * As* methods for Geometry as aliases for ExportTo; SpatialReference->create constuctor
 * made needed links from parameters to typemaps to make Get- and SetDefaultHistogram methods work in Perl
 * support for mingw Windows builds

SWIG Java: 
 * removed colortable from java bindings for now (#2231)

= GDAL/OGR 1.5.0 = 

== GDAL/OGR 1.5.0 - General Changes ==

Build:
 * CFG environment variable now ignored.  Instead set CFLAGS and CXXFLAGS
   environment variables to desired compilation options, or use --enable-debug
   for a debug build.  Default is "-g -O2" like most other packages. 
 * Added --with-hide-internal-symbols to restrict exported API from .so files
   to be the GDAL public API (as marked with CPL_DLL). 

Other:
 * OGR and GDAL C APIs now generally check for NULL objects and recover
   with an error report instead of crashing.


== GDAL 1.5.0 - Overview of Changes ==

Core: 
 * Enable Persistent Auxilary Metadata (.aux.xml) by default.
 * Support for "pam proxies" for files in read-only locations. 
 * Create and !CreateCopy pre-Delete output existing dataset.
 * Added Identify() method on drivers (per RFC 11: Fast Format Identify)
 * Implement !GetFileList() on datasets (per RFC 12).
 * Implement Delete(), Rename(), Copy() based on !GetFileList() (per RFC 12).
 * vrtdataset.h, memdataset.h and rawdataset.h are now considered part of
   the public GDAL API, and will be installed along with gdal.h, etc. 
 * Support nodata/validity masks per RFC 14: Band Masks. 
 * Plugin drivers test for ABI compatibility at load time.
 * Creation flags can now be validated (this is used by gdal_translate)
 * Default block cache size changed to 40MB from 10MB.

Algorithms / Utilities:
 * gdal_grid: New utility to interpolate point data to a grid.
 * gdal2tiles.py is new for 1.5.0.
 * gdaltransform: stdin/stdout point transformer similar to PROJ.4 cs2cs. 
 * gdalwarp: Several fixes related to destination "nodata" handling and
   nodata mixing in resampling kernels.
 * gdalwarp: Added Lanczos Windows Sinc resampling.
 * gdal_rasterize: added -i flag to rasterize all areas outside geometry.
 * gdalenhance: new utility for applying histogram equalization enhancements.
 * gdalmanage: Utility for managing datasets (identify, delete, copy, rename)
 * nearblack: Utility for fixing lossily compressed nodata collars.

Intergraph Raster Driver:
 * New for 1.5.0.

COSAR (TerraSAR-X) Driver:
 * New for 1.5.0.
 * SAR Format.

COASP Driver:
 * New for 1.5.0
 * SAR format produced by DRDC CASP SAR Processor.

GFF Driver: 
 * New for 1.5.0

GENBIN (Generic Binary) Driver:
 * New for 1.5.0.

ISIS3 Driver:
 * New for 1.5.0.
 * Also PDS and ISIS2 driver improved substantially and all moved to frmts/pds

WMS Driver:
 * New for 1.5.0.

SDE Raster Driver:
 * New for 1.5.0.

SRTMHGT Driver:
 * New for 1.5.0.

PALSAR Driver:
 * New for 1.5.0.
 * SAR format.

ERS Driver:
 * New for 1.5.0.
 * ERMapper ASCII Header

HTTP Driver:
 * New for 1.5.0.
 * Fetches file by http and then GDALOpen()s. 

GSG Driver:
 * New for 1.5.0.
 * Golden Software Surfer Grid.

GS7 Driver:
 * New for 1.5.0.
 * Golden Software Surfer 7 Binary Grid.

Spot DIMAP Driver:
 * New for 1.5.0.

RPFTOC Driver:
 * New for 1.5.0. 

ADRG Driver:
 * New for 1.5.0.

NITF Driver:
 * Added support for writing JPEG compressed (IC=C3). 
 * Added support for reading text segments and TREs as metadata.
 * Added support for 1bit images. 
 * Added support for GeoSDE TRE for georeferencing.
 * Support PAM for subdatasets.
 * Improved NSIF support.
 * Support C1 (FAX3) compression.
 * Improved CADRG support (#913, #1750, #1751, #1754) 

ENVI Driver:
 * Many improvements, particularly to coordinate system handling and metadata.

JP2KAK (Kakadu JPEG2000) Driver:
 * Now builds with libtool enabled.

GTIFF (GeoTIFF) Driver:
 * Now supports BigTIFF (read and write) with libtiff4 (internal copy ok).
 * Upgraded to include libtiff 4.0 (alpha2) as the internal option.
 * Support AVERAGE_BIT2GRAYSCALE overviews.
 * Produce pixel interleaved files instead of band interleaved by default.
 * Support TIFF files with odd numbers of bits (1-8, 11, etc). 
 * Add ZLEVEL creation option to specify level of compression for DEFLATE method

GIF Driver:
 * Nodata/transparency support added.

JPEG Driver: 
 * Support in-file masks. 

AIGrid Driver:
 * Supports reading associated info table as a Raster Attribute Table.

HFA Driver:
 * Support MapInformation/xform nodes for read and write.
 * Support AVERAGE_BIT2GRAYSCALE overviews.
 * Support Signed Byte pixel type.
 * Support 1/2/4 bit pixel types.
 * Support PE_STRING coordinate system definitions.
 * Support nodata values (#1567)

WCS Driver: 
 * Support WCS 1.1.0

DTED Driver:
 * Can now perform checksum verification.
 * Better datum detection.
 
HDF4 Driver: 
 * Support PAM for subdatasets.

Leveller Driver:
 * Added write support.
 * Added v7 (Leveller 2.6) support.

== OGR 1.5.0 - Overview of Changes ==

General:
 * Plugin drivers test for ABI compatability at load time.
 * SFCOM/OLEDB stuff all removed (moved to /spike in subversion).
 * Various thread safety improvements made.
 * Added PointOnSurface implementation for OGRPolygon.
 * Added C API interface to OGR Feature Style classes (RFC 18).

Utilities: 
 * All moved to gdal/apps. 

OGRSpatialReference: 
 * Supports URL SRS type.
 * Upgraded to EPSG 6.13. 
 * Operating much better in odd numeric locales.

BNA Driver: 
 * New for 1.5.0.

GPX Driver:
 * New for 1.5.0.

GeoJSON Driver:
 * New for 1.5.0.

GMT ASCII Driver:
 * New for 1.5.0.

KML Driver:
 * Preliminary read support added. 

DXF / DWG Driver:
 * Removed due to licensing issues with some of the source code.  Still
   available in subversion from under /spike if needed.

PG (Postgres/PostGIS) Driver:
 * Added support for recognising primary keys other than OGR_FID to use as FID.
 * Improved schema support.
 * Performance improvements related to enabling SEQSCAN and large cursor pages

Shapefile Driver:
 * Do not keep .shx open in read only mode (better file handle management).
 * Use GEOS to classify rings into polygons with holes and multipolygons if it is available. 
 * Support dbf files larger than 2GB.

MySQL Driver:
 * Added support for BLOB fields.

MITAB (MapInfo) Driver:
 * Upgraded to MITAB 1.6.4.

Interlis Drivers:
 * Support datasources without imported Interlis TID
 * Remove ili2c.jar (available from http://home.gdal.org/dl/ili2c.jar
 * Support for inner rings in Surface geometries.
 * Support spatial and attribute filters.

== SWIG Language Bindings ==

 * The "Next Generation" Python SWIG bindings are now the default.
 * Python utility and sample scripts migrated to swig/python/scripts and
   swig/python/samples.
 * Added Raster Attribute Tables to swig bindings.
 * Added Geometry.ExportToKML
 * Added CreateGeometryFromKML
 * Added !CreateGeometryFromJson
 * Added Geometry.!ExportToJson

SWIG C# related changes:
 * Support for the enumerated types of the C# interface
 * C# namespace names and module names follows the .NET framework naming guidelines
 * Changed the names of the Windows builds for a better match with the GNU/Linux/OSX builds
 * The gdalconst assembly is now deprecated
 * GDAL C# libtool build support 
 * !CreateFromWkb support
 * Dataset.!ReadRaster, Dataset.!WriteRaster support 
 * Added support for Dataset.!BuildOverviews
 * More examples added 

SWIG Python related changes:
 * Progress function callback support added.  You can use a Python function, or the standard GDALTermProgress variant
 * Sugar, sweet, sweet sugar.
    * ogr.Feature.geometry()
    * ogr.Feature.items()
    * ogr.Feature.keys()
 * doxygen-generated docstrings for ogr.py
 * geometry pickling
 * setuptools support
 * !PyPi http://pypi.python.org/pypi/GDAL/
 * setup.cfg for configuring major significant items (libs, includes, location of gdal-config0
 * support building the bindings from *outside* the GDAL source tree

SWIG Java:
 * SWIG Java bindings are orphaned and believed to be broken at this time.

===============================================================================

GDAL/OGR 1.4.0 - General Changes
--------------------------------
 

Perl Bindings: 
 - Added doxygen based documentation.

NG Python Bindings: 
 - Implemented numpy support.

CSharp Bindings: 
 - Now mostly operational.

WinCE Porting:
 - CPL 
 - base OGR, OSR and mitab and shape drivers.
 - GDAL, including GeoTIFF, DTED, AAIGrid drivers
 - Added test suite (gdalautotest/cpp)

Mac OSX Port:
 - Added framework support (--with-macosx-framework)



GDAL 1.4.0 - Overview Of Changes
--------------------------------

WCS Driver:
 - New

PDS (Planetary Data Set) Driver:
 - New

ISIS (Mars Qubes) Driver:
 - New

HFA (.img) Driver:
 - Support reading ProjectionX PE strings.
 - Support producing .aux files with statistics.
 - Fix serious bugs with u1, u2 and u4 compressed data.

NITF Driver:
 - Added BLOCKA reading support.
 - Added ICORDS='D'
 - Added jpeg compression support (readonly)
 - Support multiple images as subdatasets.
 - Support CGM data (as metadata)

AIGrid Driver:
 - Use VSI*L API (large files, in memory, etc)
 - Support upper case filenames.
 - Support .clr file above coverage.

HDF4 Driver:
 - Added support for access to geolocation arrays (see RFC 4).
 - External raw raster bands supported.

PCIDSK (.pix) Driver:
 - Support METER/FEET as LOCAL_CS. 
 - Fix serious byte swapping error on creation.

BMP Driver: 
 - Various fixes, including 16bit combinations, and non-intel byte swapping.

GeoTIFF Driver:
 - Fixed in place update for LZW and Deflated compressed images.

JP2KAK (JPEG2000) Driver:
 - Added support for reading and writing gmljp2 headers. 
 - Read xml boxes as metadata. 
 - Accelerate YCbCr handling. 

JP2MrSID (JPEG2000) Driver: 
 - Added support for reading gmljp2 headers. 

EHDR (ESRI BIL) Driver:
 - Support 1-7 bit data. 
 - Added statistics support.


OGR 1.4.0 - Overview of Changes
-------------------------------

OGR SQL:
 - RFC 6: Added support for SQL/attribute filter access to geometry, and 
   style strings. 

OGRSpatialReference: 
 - Support for OGC SRS URNs. 
 - Support for +wktext/EXTENSION stuff for preserving PROJ.4 string in WKT.
 - Added Two Point Equidistant projection.
 - Added Krovak projection.
 - Updated support files to EPSG 6.11.

OGRCoordinateTransformation: 
 - Support source and destination longitude wrapping control.

OGRFeatureStyle: 
 - Various extensions and improvements. 

INFORMIX Driver: 
 - New

KML Driver: 
 - New (write only)

E00 Driver:
 - New (read only) 
 - Polygon (PAL) likely not working properly.

Postgres/PostGIS Driver:
 - Updated to support new EWKB results (PostGIS 1.1?)
 - Fixed serious bug with writing SRSes.
 - Added schema support.

GML Driver: 
 - Strip namespaces off field names. 
 - Handle very large geometries gracefully.

ODBC Driver: 
 - Added support for spatial_ref_sys table.

SDE Driver: 
 - Added logic to speed things up while actually detecting layer geometry types

PGeo Driver: 
 - Added support for MDB Tools ODBC driver on linux/unix.

VRT Driver:
 - Added useSpatialSubquery support.


===============================================================================

GDAL/OGR 1.3.2 - General Changes
--------------------------------

WinCE Porting:
 - Support for MS WinCE new for this release.

Java SWIG Bindings: 
 - Preliminary support implemented.


GDAL 1.3.2 - Overview of Changes
--------------------------------

Locale: 
 - Force numeric locale to "C" at a few strategic points.

Idrisi Driver:
 - New for 1.3.2. 
 - Includes reading and writing. 
 - Limited coordinate system support.

DIPEx Driver: 
 - New for GDAL 1.3.2 (related to ELAS format).

Leveller Driver:
 - New for GDAL 1.3.2. 

NetCDF Driver:
 - Improved autoidentification of x, y dimensions.
 - Improved CF support.

JPEG2000 (JasPer) Driver:
 - Use GDALJP2Metadata to support various kinds of georeferencing. 

JPEG2000 (JP2KAK) Driver:
 - Support writing tiles outputs so that very large images can be written.

GeoTIFF Driver:
 - Report error when attempting to create >4GB uncompressed file.
 - Updated to latest libtiff, now supports "old jpeg" fairly well. 
 - Improved support for subsampled YCbCr images. 

Imagine (HFA) Driver:
 - Support reading affine polynomial transforms as geotransform. 
 - Support overviews of different type than base band.
 - Support reading RDO style "nodata" indicator.

PCI Aux Driver:
 - Support projections requiring parameters. 

MrSID Driver;
 - Fixed problem with writing files other than 1 or 3 bands.
 - Support ESDK 6.x. 

BMP Driver:
 - Added support for 32bit images with bitfields compression.

DODS Driver:
 - Upgraded to support libdap 3.6.x. 
 - Upgraded to support [-x][-y] to flip image.

gdal_rasterize Utility:
 - New for GDAL 1.3.2. 
 - Rasterize OGR polygons into a raster. 



OGR 1.3.2 - Overview of Changes
-------------------------------

OGRFeature:
 - Added support for OFTDate, OFTTime and OFTDateTime field types. 
 - Also applied to a few drivers (shapefile, mysql, postgres)

OGRLayer:
 - GetFIDColumn() and GetGeometryColumn() added.

Generic OGR SQL:
 - Proper support for spatial and attribute filters installed on 
   OGR SQL resultsets. 

OGRSpatialReference:
 - Upgraded data files to EPSG 6.9

PostGIS Driver:
 - Include proj4text in new spatial_ref_sys entries.
 - Fixed support for very large queries.
 - Fixed DeleteLayer() implementation.
 - Added COPY support for accerated loading.

MySQL Driver:
 - Added read and write support for Spatial types. 
 - Support spatial_ref_sys and geometry_columns tables.
 - Various other improvements (dates, smallint, tinyint, etc)
 - More robust auto-detection of column types for layers
   created from SQL statements
   
ArcSDE Driver:
 - New for 1.3.2. 
 - Read-only support for all geometry types. 
 - Supports coordinate systems.
 - Requires SDE C API from ESRI.

Shapefile Driver:
 - Avoid posting errors when .dbf's without .shps are opened.
 - Added pseudo-SQL REPACK command after deleting features.
 - Implement DeleteFeature()

S-57 Driver:
 - Added support for Arcs. 
 - Added special DSID_DSSI feature class to capture header info.

DGN Driver:
 - Support writing geometry collections.

DWG/DXF Driver:
 - New for OGR 1.3.2
 - Only supports writing DWG and DXF.
 - Depends on DWGdirect library.


===============================================================================

GDAL 1.3.1 - Overview of Changes
--------------------------------

Next Generation SWIG Wrappers (GDAL and OGR):
 - Python, Perl and Ruby bindings considered to be ready to use. 
 - C#, Java, PHP are at best initial prototypes.
 - Added configure options for most NG options. 

PCRaster Driver: 
 - libcsf is now included as part of GDAL.
 - PCRaster enabled by default on win32. 
 - --with-pcraster=internal option now supported on unix (but not yet default)

VSI Virtualization:
 - The "large file API" (VSI*L) has been re-engineered to allow installing
   additional file handlers at runtime.  
 - Added "in memory" VSI handler so that now any driver using VSI*L 
   functions for data access can operate on in-memory files. 
 - PNG, JPEG and GeoTIFF drivers upgraded to work with in-memory support.

Raster Attribute Tables:
 - Implemented new Raster Attribute Tables support.  See the 
   GDALRasterAttributeTable class for more information. 

Erdas Imagine Overviews:
 - Erdas Imagine driver upgraded to support building internal overviews. 
 - Generic overview handler updated to support overviews in Erdas Imagine
   format for any file format.  Set USE_RRD config option to YES to enable.

gdalwarp:
 - Added proper support for "unified source nodata", so the -srcnodata
   switch works well. 

RIK Driver: 
 - New Swedish format driver implemented by Daniel Wallner.

JPEG Driver:
 - Substantial improvements to EXIF support.  

MrSID Driver:
 - Updated with proper JPEG2000 support as JP2MRSID driver, including 
   encoding with ESDK.
 - Updated to support MrSID Version 5.x SDKs.

PNG Driver:
 - Fixed serious bugs with 16bit file support. 
 - Added NODATA_VALUES to identify RGB sets that indicate a nodata pixel.


OGR 1.3.1 - Overview of Changes
-------------------------------

Reference Counting:
 - OGRSpatialReference and OGRFeatureDefn now honour reference counting 
   semantics.
 - Note that, especially for the OGRFeatureDefn, it is now critical that
   all drivers be careful with reference counting.  Any OGR drivers not in
   the core distribution will likely crash if not updated.

ESRI Personal Geodatabase Driver:
 - New driver implemented for ESRI Personal Geodatabase (.mdb) files. 
 - Uses ODBC, enabled by default on win32. 

ODBC Driver:
 - Updated to support binary fields. 
 - Updated to support WKB geometry fields. 
 - Updated to support DSN-less connections. 

S57 Driver:
 - Added support for Inland Waterways, and Additional Military Layers profiles


===============================================================================

GDAL 1.3.0 - Overview of Changes
--------------------------------

Multithreading:
 - Lots of work done to implement support for multiple threads reading
   from distinct GDALDataset objects at the same time. 

GDALRasterBand / Persistant Auxilary Metadata (PAM):
 - Support for preserving a variety of metadata in a supporting XML file. 
 - GDALRasterBand now supports "remembering" histograms, and has a concept
   of the default histogram. 
 - GDALRasterBand now supports remembering image statistics.
 - Disabled by default (set GDAL_PAM_ENABLED=YES to turn on). 
 - Supported by *most* drivers with some caveats.

GDALCopyWords(): 
 - This function is a low level work horse for copying and converting pixel 
   data in GDAL.  It has been substantially optimized by Steve Soule (Vexcel).

Next Generation Bindings:
 - Kevin Ruland and Howard Butler are working on reworked support for 
   SWIG to generate Python, PHP, Java, C# and other language bindings for GDAL
   and OGR. 

VB6 Bindings: 
 - Now substantially complete, see VB6 directory.

HDF5 Driver: 
 - New HDF5 driver implemented by Denis Nadeau. 

RMF Driver: 
 - New driver for Raster Matrix Format by Andrey Kislev. 

MSGN (Meteosat Second Generation Native) Driver:
 - New driver implemented by Frans van der Bergh.

VRT Driver:
 - Fixed whopper of a memory leak in warped raster case.

NetCDF Driver: 
 - Preliminary CF conventions support by Denis Nadeau.

NITF Driver:
 - NITF files between 2 and 4 GB in size can now be read and written.

JPEG Driver: 
 - Added support for reading EXIF as metadata by Denis Nadeau.

DODS Driver:
 - Fixed up libdap 3.5.x compatibility.

JP2ECW (JPEG2000 ECW SDK) Driver:
 - Implemented support for new GML-in-JPEG2000 specification.
 - Implemented support for old MSI "worldfile" box. 

JP2KAK (JPEG2000 Kakadu) Driver:
 - Implemented support for new GML-in-JPEG2000 specification.
 - Implemented support for old MSI "worldfile" box. 

PCIDSK Driver: 
 - tiled files now supported for reading.
 - overviews now supported for reading.

HFA (Imagine) Driver:
 - Supports creating internal overviews in very large files. 
 - Support reading class names. 
 - Support creating compressed files. 

GeoTIFF Driver:
 - Support reading files with odd bit depths (ie. 3, 12, etc). 
 - Support 16/24bit floating point TIFFs (per Technote 3) (Andrey).
 - Support 12bit jpeg compressed imagery using libjpeg "MK1" library.

HDF4 Driver:
 - Added support for ASTER Level 1A, 1B and 2 products (Andrey). 


OGR 1.3.0 - Overview of Changes
-------------------------------

OGRGeometry:
 - WKT (and GML) encoding now attempts to preserve pretty much full double
   precision. 
 - geometries are now "coordinate dimension preserving" rather than dynamically
   figuring out dimension depending on whether Z is set.  So a geometry can
   now be 3D even if all z values are zero.  
 - Fixed up proper EMPTY geometry support per standard.

GRASS Driver:  
 - New driver for GRASS 6 vector data written by Radim Blazek. 

Interlis Driver: 
 - New driver for Swiss Interlis format from Permin Kalberer (SourcePole).

Shape Driver:
 - Fixed logic for degenerate polygons (Baumann Konstantin).
 
PostgreSQL/PostGIS Driver:
 - Implemented fast GetExtent() method (Oleg Semykin).
 - Implemented layer type from geometry_columns (Oleg Semykin).
 - Handle PostGIS 1.0 requirements for coordinate dimemsion exactness.
 - Handle EWKT type in PostGIS 1.0.
 - Generally PostGIS 0.x and 1.0 should now be supported fairly gracefully.
 - Added PostGIS "binary cursor" mode for faster geometry access.

VRT Driver:
 - Pass through attribute queries to underlying driver. 
 - Pass through spatial queries as attribute filters on the underlying layer.

S57 Driver:
 - Added concept of supporting different profiles. 
 - Added prototype AML profile support. 

MySQL Driver:
 - Fixed for FID recognition (eg. mediumint). 

GML Driver: 
 - Various fixes for generated GML correctness (Tom Kralidis).

TIGER/Line Driver:
 - Added Tiger 2004 support.

Oracle Driver:
 - Use VARCHAR2 for fixed size string fields. 
 - Use OCI_FID config variable when creating layers, and reading select results




===============================================================================

GDAL 1.2.6 - Overview of Changes
--------------------------------

gdal_translate: 
 - Added -sds switch to copy all subdatasets. 

gdalwarp: 
 - Added Thin Plate Spline support (-tps switch). 

GDALRasterBand:
 - Now uses two level block cache allowing efficient access to files
   with a very large number of tiles. 
 - Added support for YCbCr color space for raster band color interpretations.
 - Added AdviseRead() method - currently only used by ECW driver and OGDI 
   drivers. 

ILWIS Driver:
 - New driver for the raster format of the ILWIS software. 

ECW Driver:
 - Updated to use ECW SDK 3.1 (older ECW SDK no longer supported!)

ECWJP2 Driver:
 - Added JPEG2000 support driver based on ECW/JPEG2000 SDK with a variety
   of features. 

NITF Driver: 
 - Added support for reading *and* writing JPEG2000 compressed NITF files 
   using the ECW/JPEG2000 SDK. 
 - Added ICHIPB support. 

HDF Driver:
 - Add support for georeferencing from some additional metadata formats. 
 - Fixed bug with multi-band HDF-EOS datasets. 

MrSID Driver:
 - Driver can now be built as a plugin on win32. 
 - Split out MrSID 3.x SDK support - not readily buildable now. 
 - Implemented accelerated IO cases for MrSID 4.x SDK. 
 - Support for writing MrSID files added (improved?)

Imagine Driver: 
 - Fixed bug reading some large multiband Imagine files. 
 - Added support for writing compressed files. 

Win32 Builds:
 - Added versioning information to GDAL DLL.

L1B Driver:
 - Only return a reduced grid of control points. 

IDA (WinDisp4) Driver:
 - New read/write driver for the Image Display and Analysis raster format 
   used by WinDisp 4. 

NDF (NLAPS) Driver:
 - Added NDF/NLAPS read driver for version 1 and 2. 

MSG Driver: 
 - Added support for the Metosat Second Generation raw file format.

GTiff Driver:
 - Added support for offset/scale being saved and loaded (special metadata). 
 - Added Cylindrical Equal Area.
 - Added PROFILE creation option to limit extra tags.

PNG Driver: 
 - Updated internal code for libpng to libpng 1.2.8.


OGR 1.2.6 - Overview of Changes
-------------------------------

OGRSFDriverRegistrar:
 - Added support for autoloading plugin drivers from ogr_<driver>.so. 

ogr.py:
 - Geometry, and Feature now take care of their own reference counting and
   will delete themselves when unreferenced.  Care must still be taken to
   unreference all features before destroying the corresponding 
   layer/datasource.
 - ogr.Feature fields can now be fetched and set directly as attributes. 
 - Geometry contructor can now take various formats (wkt, gml, and wkb). 
 - Added docstrings. 
 - Added better __str__ methods on several objects. 
 - Various other improvements. 

OGRLayer:
 - Re-wrote generic spatial search support to be faster in case of rectangular
   filters. 
 - Intersects() method now really uses GEOS.  This also affects all OGR 
   layer spatial filtering (with non-rectangular filters). 
 - Added SetNextByIndex() method on OGRLayer.  

OGRSpatialReference:
 - Automatically generate +towgs84 from EPSG tables when translating to
   PROJ.4 if available and TOWGS84 not specified in source WKT. 
 - Updated GML CRS translation to follow OGC 05-011 more closely.  Still
   incomplete but operational for some projections. 
 - Added support for FIPSZONE State Plane processing for old ESRI .prjs. 
 - Added Goode Homolosine support. 
 - Added GEOS (Geostationary Satellite) support.

OCI (Oracle) Driver:
 - Added GEOMETRY_NAME creation option to control the name of the field to
   hold the geometry.

PostGIS Driver:
 - Fixed some problems with truncation for integer and float list fields. 

Shapefile Driver: 
 - Added support for MapServer style spatial index (.qix). 

GML Driver: 
 - Improved support for 3L0 (GML 3 - Level 0 profile) reading and writing. 
   On read we can now use the .xsd instead of needing to build a .gfs file. 


===============================================================================

GDAL 1.2.5 - Overview of Changes
--------------------------------

gdalwarp Utility:
 - Added "proper" source and destination alpha support. 

PCRaster Driver: 
 - added write support, now consider ready for regular use.

MrSID Driver:
 - Initial support for writing to MrSID with encoding SDK. 

GeoTIFF Driver:
 - Updated internal copy of libtiff to fix overview building ... really!
 - Fixed bug when writing south-up images.


OGR 1.2.5 - Overview of Changes
-------------------------------

OGRSpatialReference:
 - Added Bonne projection. 

Docs:
 - Added OGR C++ API Tutorial (reading and writing). 

PostGIS Driver:
 - Implemented SetFeature() and DeleteFeature() methods for in-place updates.

Oracle (OCI) Driver:
 - Fixed support for writing into Oracle 10g. 
 - Fixed serious memory leak of geometries. 
 - Fixed bug with 3D multipolygons. 
 - Added support for selecting tables in the datasource name.

===============================================================================

GDAL 1.2.4 - Overview of Changes
--------------------------------

gdalwarp: 
  - Fixed some issues with only partially transformable regions. 
  - Added Alpha mask generation support (-dstalpha switch).

HFA/Imagine Driver:
  - bug fix in histogram handling.
  - improved support for large colormaps. 

Envi Driver:
  - Capture category names and colormaps when reading.

SAR CEOS Driver:
  - Added support for PALSAR/ALOS Polarimetric Datasets. 

RadarSat 2 Driver:
  - New.  Reads RadarSat 2 Polarimetric datasets with a "product.xml" and 
    imagery in TIFF files. 

OGDI Driver:
  - Important bug fix for downsampled access.

GeoTIFF Driver:
  - Lots of libtiff upgrades, including some quite serious bug fixes.
  - Added better support for 16bit colormaps. 
  - Write projection information even if we don't have a geotransform or GCPs.
  - Improved alpha support.
  - Generate graceful error message for BigTIFF files. 

DODS Driver:
  - Almost completely reimplemented.   Uses chunk-by-chunk access.  Supports
    reading several bands from seperate objects.  Some new limitations too.

NetCDF Driver:
  - Seperated out a GMT NetCDF driver and a more generic but partially broken
    NetCDF driver (Radim).

JP2KAK Driver:
  - Added alpha support, including greyscale+alpha. 

AirSAR Driver:
  - New, reads AirSAR Polarimetric Radar format. 



OGR 1.2.4 - Overview of Changes
-------------------------------

epsg_tr.py: 
  - Added escaping rules when generating PostGIS output.

tigerpoly.py:
  - Discard dangles and degenerate rings. 

VRT Driver:
  - Fixed serious error in handling cleanup of VRT datasources, was often 
   causing a crash.

SQLLite Driver:
  - Fixed substantial memory leaks. 

MySQL Driver:
  - New readonly non-spatial MySQL driver implemented.

MITAB Driver:
  - Updated from upstream, several fixes.

TIGER/Line Driver:
  - Fixed serious bug with handling "full" records at end of .RT2 file. 

OCI/Oracle Driver:
  - Added OCI_FID environment support to control FID selection.

OGRGeometry:
  - Added Centroid() implementation (from GEOS?)

 =============================================================================

GDAL 1.2.3 - Overview of Changes
--------------------------------

GeoTIFF Driver:
    - Fixed many missing compression codecs when built with the internal 
      libtiff.
    - Modified driver metadata to only list available compression types.

DODS Driver:
    - Added support for OPeNDAP version after 3.4.x (use of opendap-config).

GRASS Driver:
    - Fixed support for building with grass57.

MrSID Driver:
    - Fixed support for MrSID Encoding SDK. 

NITF Driver:
    - Fixed serious bug with non-square output files.


OGR 1.2.3 - Overview of Changes
-------------------------------

OGRSpatialReference:
    - Corrected memory leaks - OSRCleanup() cleans up temporary tables.
    - Fixed build problem with ogrct.cpp on Solaris. 

TIGER Driver:
    - Improved generality of support for GDT files.

OGRGeometry:
    - Added getArea() method for rings, polygons and multipolygons. 

 =============================================================================

GDAL 1.2.2 - Overview of Changes
--------------------------------

GRASS Driver: 
    - Add Radim's version of the driver submitted by Radim.  This version
      uses GRASS 5.7 libraries directly instead of using libgrass. 

DODS Driver:
    - Added support for spatial_ref, FlipX and FlipY .das info.

CPG Driver:
    - added new driver for Convair Polarimetric format. 

HDF Driver:
    - Significant bugs fixed. 

USGS DEM Driver:
    - Support writing UTM projected files.

PNG Driver:
    - Upgraded to libpng 1.2.6. 

MrSID Driver:
    - Substantial performance improvements. 
    - Support for DSDK 4.x 
    - Support JPEG2000 files via MrSID SDK. 

NITF Driver:
    - Support JPEG2000 compressed files (with Kakadu support)

ESRI BIL:
    - Support .clr color files.

VRT Driver:
    - Added support for describing raw files with VRTRawRasterBand. 
    - Added support for virtual warped files with VRTWarpedRasterBand.

GeoTIFF Driver:
    - Fix support for 16bit image color tables. 
    - Write ExtraSamples tag for files with more samples than expected
      in photometric interpretation. 
    - External overviews now built for read-only files. 

Erdas Imagine Driver:
    - Fixed support for compressed floating point layers. 
    - Various other fixes for compatible with newer Imagine versions.
    - improved metadata handling.

gdal_merge.py:
    - sets projection on output file.


OGR 1.2.2 - Overview of Changes
-------------------------------

SQLite Driver:
    - New read/write driver implemented for SQLite databases.

CSV Driver:
    - New read/write driver implemented for comma seperated value files.

S-57 Driver:
    - Substantial performance improvements.

ODBC Driver:
    - Arbitrary length field values now supported. 

GEOS:
    - Integration a series of methods utilizing GEOS when available.  Note
      that Intersect() is still just an envelope comparison.

OGRSpatialReference:
    - Fixed Swiss Oblique Mercator support. 

 =============================================================================

GDAL 1.2.1 - Overview of Changes
--------------------------------

gdal_contour:
    - Now build and installed by default.

HDF4 Driver:
    - Added some degree of HDF-EOS support.  HDFEOS layer now part of GDAL.

DODS Driver:
    - Substantial fixes, support for flipped datasets.  

HFA (Erdas Imagine) Driver:
    - Fixed bug with files between 2 and 4GB.
    - Capture statistics as metadata.

Erdas 7.x LAN/GIS Driver:
    - Newly implemented.

USGS DEM Driver:
    - Various fixes to creation support / CDED product.

NITF Driver:
    - Capture USE001 and STDIDC TREs as metadata.
    - Capture all sorts of header information as metadata.
    - Support geocentric corner coordinate specification.

MrSID Driver:
    - Support added for DSDK 4.0.x.

ECW Driver:
    - Added preliminary support for using 3.0 SDK for JPEG2000 support. 
    - Fix oversampling assertion problem.

ArcInfo Binary Grids:
    - Added support for 0x01 and 0x20 block type.


OGR 1.2.1 - Overview of Changes
-------------------------------

OGRSpatialReference:
    - Various fixes related to prime meridians.

PostgreSQL/PostGIS Driver:
    - Added layer name laundering. 
    - Launder names on by default.
    - Clean stale entries in geometry_columns table when creating a layer.
    - Support treating names views as layers.
    - Handle long command strings.

S57 Driver:
    - Fixed serious bugs with support for auto-applying update files.
    - Improvements to S57 writing support.
  
 =============================================================================

GDAL 1.2.0 - Overview of Changes
--------------------------------

Configuration:
    - Libtool used by default with Unix style builds.  Use --without-libtool
      to avoid this. 
    - PROJ.4 can now be linked statically using --with-static-proj4.
    - Added --without-bsb option for those averse to legal risk.

DODS/OPeNDAP Driver:
    - Preliminary DODS (OPeNDAP) driver implemented (James Gallagher @ URI).

PCIDSK Driver:
    - PCIDSK read/write raster driver implemented (Andrey).

Erdas Imagine / HFA Driver: 
    - Support recent Imagine versions (data dictionary changes).
    - Better logic to search for .rrd file locally.
    - Support creating files in the 2GB to 4GB size range.

GIF Driver: 
    - Updated to libungif 4.1.0. 
    - Various hacks to try and identify transparent colors better.

BMP Driver: 
    - Handle 32bit BMPs properly.

HDF4 Driver:
    - Added proper support for multi-sample GR datasets. 
    - Various fixes and improvements for specific product types.

GeoTIFF Driver: 
    - Added PHOTOMETRIC option to control photometric interp of new files.

JPEG2000/Kakadu Driver: 
    - Support reading/creating lossless 16bit files. 
    - Updated to support Kakadu 4.1 library.

NITF Driver: 
    - Implement support for IGEOLO="U" (MGRS/UTM) coordinates. 
    - Added overview (as external GeoTIFF file) support.

MrSID Driver: 
    - Support DSDK 4.2.x. 

PNG Driver:
    - Support required byte swapping of 16bit PNG data. 

FAST Driver:
    - lots of fixes, supports more datums and ellipsoids. 

NetCDF Driver: 
    - New driver implemented for netCDF support. 
    - Pretty much tied to form of netCDF used in GMT for now. 

VTerrain .bt Driver: 
    - New driver for VTerrain .bt elevation format.

ECW Driver:
    - support supersampled reads efficiently. 
    - special case for dataset level RasterIO() implemented for much better
      performance in some applications. 

ESRI BIL (EHdr) Driver:
    - Support world files.

VRT Driver: 
    - Implement filtering support. 

GIO (Arc/Info Binary Grid via avgridio.dll): 
   - Driver disabled ... to undependable. 


Python:
    - Preliminary support for numarray in addition to numpy (Numeric). 

Contouring:
    - New gdal_contour utility program implementing contour generation.  
    - Underlying algorithm in gdal/alg.  

Warping:
    - Improved support in GDALSuggestedWarpOutput() for "world" sized
      files that are only partially transformable. 
    - Bicubic resampler improved. 
    - What was gdalwarptest is now gdalwarp, and the old gdalwarp is now
      gdalwarpsimple.  The sophisticated warper is now the default.

Man Pages: 
    - Man pages for GDAL utilities now being maintained and installed (Silke).

 

OGR 1.2.0 - Overview of Changes
-------------------------------

OGRSpatialReference:
   - Added methods for converting to/from GCTP representation.
   - Added HOM 2 points on centerline variant. 

DODS (OPeNDAP) Driver:
   - Preliminary implementation.

TIGER/Line Driver: 
   - Added support for GDT ASCII TIGER-like format. 
   - Support TIGER/Line 2003 format. 

S-57 Driver:
   - Preliminary export support implemented. 
   - Support capture of FFPT (feature to feature) linkages.
   - Support capture of TOPI from VRPT.
   - Support capture of primitives as additional layers. 

Shapefile Driver:
   - gdal/frmts/shapelib removed from GDAL source tree, now just a 
     copy of required shapelib files are kept in gdal/ogr/ogrsf_frmts/shape. 
   - Attempt identify polygons that are really multi-polygons and convert them 
     into multi-polygons properly (Radim Blazek).
   - Create FID attribute in .dbf file if no attribute added by application.

GML Driver:
   - Lots of fixes and improvements for reading and writing. 
   - Now writes a schema file by default. 
   - Field types are set now when reading based on data found on first pass.
   - Added support for the various kinds of geometry collections.

DGN Driver:
   - Now using dgnlib 1.9 - this carries with it various new element types
     and some important bug fixes.

ODBC Driver:
   - New ODBC driver implemented.  Build by default on Windows, and buildable
     on Unix (with unixodbc). 

VRT Driver: 
   - New "virtual" OGR Datasource format implemented.  
   - Configuration stored in XML control file. 

Oracle (OCI) Driver:
   - support reading views. 

OGR Core:
   - Added support for WKT EMPTY geometry objects (like "MULTIPOINT(EMPTY)").
   - Added DeleteFeature() method on OGRLayer class.  

NTF Driver: 
   - Support CHG_TYPE attribute for landline plus product. 



 ==============================================================================

GDAL 1.1.9 - Overview of Changes
--------------------------------

 o MrSID Driver: New for 1.1.9, read-only, includes good coordiante system
   support, and should be high performance. 

 o ECW Driver: Now reads coordinate system information (but doesn't write). 

 o HDF Driver: Added support for Hyperion Level 1, Aster Level 1A/1B/2, MODIS 
   Level 1B(earth-view)/2/3, SeaWIFS Level 3. 

 o L1B Driver: Now reads GCPs for georeferencing.

 o NITF Driver: Support for reading RPC, variety of bugs fixes for reading and
   writing.  Also some general RPC infrastructure added to GDAL.

 o JP2KAK Driver: Can be used with Kakadu 4.0.2 now.  Compatibility fixes
   for internal geotiff to improve compatibility with Mapping Science tools.
   Added palette support. 

 o HFA (Imagine) Driver: Added read/write support for color table opacity.
   Added write support for large (spill) files. 

 o "core" directory renamed to "gcore" to avoid confusing configure script.

 o Added support for GDAL_DATA environment variable to point to GDAL support
   data files (those in gdal/data directory).

 o Added GDALDataset::RasterIO() for more efficient reading of multiple bands
   in one request (in some cases anyways). 

 o High performance warp api considered to be complete now, and substantially
   optimized.

 o gdal_merge.py: supported multiple bands, copying PCT. 


OGR 1.1.9 - Overview of Changes
-------------------------------

 o Oracle Spatial: New generic read/write, and implemented highly optimized
   loading support. 

 o Tiger driver: added support for TIGER/Line 2002 product.

 o GML driver:  now supports Xerces versions from 1.6 up to 2.3.  Lots of
   bugs fixes and improvements.   GML Geometry now in OGR core. 

 o Improved support for translating to and from ESRI WKT, including a complete
   mapping between EPSG related ESRI datum names and OGR's expected names. 

 o Improved support for alternate prime meridians in coordinate system code.

 o Shapefiles: Can write features with NULL geometry, 

 o DGN: added 3d write support. 

 o Implemented generic attribute indexing support (only used for shapefile
   at this point).  Use in SQL where clauses and ExecuteSQL(). 

 o WKT MULTIPOINT in/out formatting fixed.

 o Added SynToDisk() method on OGRDataset and OGRLayer. 

 o Implemented "Web Coordinate Transformation Service" (ogr/wcts). 

 o Implemented "in memory" format driver. 

 o C API documented.




 ==============================================================================

GDAL 1.1.8 - Overview of Changes
--------------------------------

 o Implemented HDF 4 read/write support. This includes HDF EOS reading.

 o Implemented Windows BMP read/write support. 

 o Implemented NITF read/write support. 

 o Implemented NOAA Polar Orbiter L1B format driver. 

 o Implemented EOSAT FAST format driver. 

 o Implemented a JasPer based JPEG2000 driver (several limitations).

 o Implemented a Kakadu based JPEG2000/GeoJP2(tm) driver (full featured, but 
   Kakadu is not open source). 

 o Implemented new 'gdalwarp' application for projection and GCP based image
   warping.  See gdal/alg for underlying algorithms.  Currently gdalwarp only
   supports 8 bit images and holds the whole source image in memory.

 o Implemented write support for ESRI ASCII Grids. 

 o Lots of improvements to GeoTIFF driver.  Metadata writing, update of
   georeferencing, and support for writing PCS codes based on AUTHORITY fields
   in WKT.  

 o Implemented support for uncompressed 1bit data in Erdas Imagine files,
   as well as generic metadata.

 o Fixed 0xFF compression support in the Arc/Info Binary Grid (AIG) driver.

 o Lots of improvements to BSB drive, including preliminary uncompressed 
   output support, support for reading BSB 3.0 and GEO/NOS.

 o Lots of work on VRT format.  

 o ECW: Fixed bug with reading a more than full resultion.

 o Envisat driver now supports AATSR TOA and MERIS data.

 o Fixes for nodata support in GRASS driver.

 o Added the --version and --formats options to many utility programs.

 o gdal_translate: 
    - added -projwin flag to copy a window specified in projection coordinates.
    - added the -a_srs option to assign a user supplied SRS to output file.
    - translation with subsetting to any format now support (uses VRT inside).

 o Lots of metadata now attached to driver objects describing their 
   capabilities. 

 o Implemented GDALDestroyDriverManager() to ensure full memory cleanup of
   GDAL related resources.

 o Added a 'devinstall' target on Windows to support easy installation of
   include files and stub libraries on Windows.  Also many other improvements
   to Windows build.  Most options can be easily turned on and off from the
   nmake.opt file now.


OGR 1.1.8 - Overview of Changes
-------------------------------

 o Implemented support for writing 2D DGN files.   Added support for MSLINK
   and Text values available as attributes.

 o Implemented FMEObjects based read driver. 

 o Implemented ExecuteSQL() method on OGRDataSource.  Generic code supports
   fairly full featured SELECT statements. 

 o Various fixes to 3D shapefile support. 

 o Fixes to binary representation for 2.5D geometries.  Fixed MULTIPOINT WKT
   geometry representation.

 o Upgraded OGRSpatialReference.importFromEPSG() to use the new EPSG 6.2.2
   tables instead of the old EPSG 4.x tables.

 o Many fixes to PostGIS driver, including special creation options for
   "laundering" field names to save tokens.

 o Many improvements to standards conformance of OGRSpatialReference WKT
   representation to the OGC Coordinate Transformations specification.  Still
   some quirks related to prime meridians and coordinate systems with units
   other than degrees.

 o Implemented support for Meridian 2 NTF files in NTF driver.  Better
   support for GENERIC_CPOLY geometries.

 o  Added support for [NOT] IN, [NOT] LIKE and IS [NOT] NULL predicates in 
   WHERE clauses.

 o Implemented a C API for accessing OGR.

 o Implemented support for building OLE DB Provider with Visual Studio.NET
   (many changes in ATL templates).  Lots of other OLE DB improvements for
   better MapGuide compatibility.


GDAL 1.1.7 - Overview of Changes
--------------------------------

 o Add XPM (X11 Pixmap) format.

 o Added rough ENVI raster format read support.

 o Added --version support (and supporting GDALVersionInfo() function).

 o Special hooks for getting raw record data from sar ceos files and Envisat
   via the metadata api.

 o Upgraded TIFF/GeoTIFF support to CVS version ... includes new extension
   API and removes need for private libtiff include files entirely.

 o gdal_translate now has scaling option (-scale). 

 o Added utility documentation.

OGR 1.1.7 - Overview of Changes
-------------------------------

 o Added Arc/Info binary coverage format read support.

 o Added ogrtindex for building MapServer compatible OGR tile indexes.

 o Added default implementation of GetFeature(fid) method on OGRLayer.

 o Shape driver now supports reading and creating free standing .dbf files
   for layers without geometry.

 o Added utility documentation.

 o Fixed major memory/file handle leak in SDTS access.

 o Added ADSK_GEOM_EXTENT support for OLE DB provider.

 o Ensure shapefiles written with correct polygon ring winding direction
   plus various other shapefile support fixes.

 o GML read/write working reasonable well, including use of .gfs files.


GDAL 1.1.6 - Overview of Changes
--------------------------------

 o Add > 2GB file support on Linux 2.4.

 o Implemented USGS DEM reading.

 o Implemented BSB Format (Nautical Chart Format) read support.

 o Preliminary implementation of Virtual Datasets (gdal/frmts/vrt). 

 o Support for writing DTED files. 

 o Some raw formats (ie. PAux, HKV) support files larger than 2GB.

 o Add the AddBand() method on GDALDataset.

 o PAux: Added color table read support. 

 o Various fixes to OGDI driver.

 o Stripped out the GDALProjDef related capabilities.  Superceeded by
   OGRSpatialReference, and OGRCoordinateTransformation functionality.

 o Improved CEOS support, notable for ESA LANDSAT files, D-PAF ERS-1 and
   Telaviv ERS data. 

 o geotiff: upgraded libtiff support to approximately libtiff 3.5.7.

 o DGN: Added support for complex shapes, shapes assembled from many elements.
   Various other improvements.


OGR 1.1.6 - Overview of Changes
-------------------------------

 o Fixed OGDI driver so that gltp urls with drive letters work properly on 
   windows.

 o Many improvements to OLE DB provider during the process of making it 
   compatible with the MapGuide (SDP) client.  These include implementing
   restrictions for schema rowsets, treating missing information like WKT
   coordinate systems as NULL fields, and setting ISLONG on geometry fields.
   Also made thread safe. 

 o DGN: Threat SHAPE elements as polygons.  Set style information for text.
   Added 3D support for most elements. 

 o Fixed bugs in WKT format for some OGR geometry types (ie. multipoint).

 o Added support for morphing to/from ESRI WKT format for OGRSpatialReference.

 o NTF: Don't try to cache all the records from multiple files at once.

 o Added experimental XML SRS support ... not the final schema.  Added
   supporting "minixml" support to CPL.			

 o PostGIS: Upgraded to PostGIS 0.6.  Added "soft transaction" semantics.  
   Many create feature calls can now be part of one transaction.  Transactions
   are now a general OGR concept although only implemented for PostGIS. 

 o Added transform() and transformTo() methods for reprojecting geometries and
   added user options for this in ogr2ogr.

 o Very preliminary GML read/write support.  Needs Xerces C++ XML parser for
   read support. 

==============================================================================

GDAL 1.1.5 New Features
-----------------------

o AIGrid:
- Return nodata value.

o OGDI:
- Added format user documentation.
- Added Sub Dataset support.
- Utilize OGDI 3.1 style capabilities metadata.

o SAR_CEOS:
- Added support for Alaska SAR Toolbox naming convention.
- Read map projection record for corner GCPs.

o PNG Driver:
- read/write support for transparency via colortable and nodata value.

o Erdas Imagine (HFA) Driver:
- Added support for reading external large image files.
- Added support for uncompressed, but reduced precision blocks.

o GIF Driver:
- Added .wld world file support.
- Added transparency read support.
- Upgraded to libungif 4.x.

o JPEG Driver:
- Added .wld world file support.

o PAux Driver:
- Added limited gcp and projection read support.

o GeoTIFF Driver:
- Added specialized support for 1 bit files.
- Upgraded world file reading (added .wld files), use
GDALReadWorldFile().

o JDEM Driver is new (Japanese DEM format).

o FujiBAS Driver is new.

o ERMapper ECW Driver is new.

o GDAL Bridge: upgraded to include new entry points, like GCP access and
nodata api.

o gdal_translate: added the -not_scrict option.

o GDALGetRandomRasterSample(): Return magnitude for random samples.

o Added use of CPL_CVSID macro in most source files. Running the RCS ident
command on any GDAL executable or shared library should now give a listing
of most object file versions from which it was built.

o Various improvements so that static builds will work under Cygwin.

o Various improvements so that builds can be done on MacOS X.

o Overviews: Implement AVERAGE_MAGPHASE option for complex image overviews.

o Added support for sub datasets to gdalinfo, core api and OGDI raster driver.

o The size of the GDAL cache can now be overridden with the GDAL_CACHEMAX
environment variable (measured in MB).

o Added Driver implementation tutorial to documentation.

o Added apps/gdaltindex.c - application for building tile indexed raster
datasets suitable for use with UMN MapServer.


GDAL 1.1.5 Significant Bug Fixes
--------------------------------

o SAR_CEOS:
- Don't try to get GCPs from scanlines with no prefix data.

o GeoTIFF:
- Fixed handling of RGBA band ordering on big endian systems.
- Fixed bugs in overview generation, especially when updating in place.

o gdal-config should work properly in all situations now.

o JPEG Driver: improved magic number tested to avoid ignoring some jpeg files.

o FITS Driver: lots of fixes and improvements.


OGR 1.1.5 New Features
----------------------

o Implemented support for attribute query filters (SetAttributeFilter())
on OGRLayer, provided SWQ based implementation, plugged into all
drivers and added hooks to ogrinfo.

o MapInfo Driver:
- Added accelerated spatial query support.
- Upgraded to current MITAB source as of GDAL release date.

o S-57 Driver:
- Added support for applying S-57 updates automatically.

o SDTS Driver:
- Added ENID and SNID to line features.
- Return coordinate system in WKT instead of PROJ.4 format.

o Shapefile Driver:
- Auto determine shapefile type from first object written.
- Added good support for NULL shapes, and NULL attribute fields.
- Added support for .prj files (read and write).

o PostgreSQL Driver:
- Added PostGIS support.
- Pass attribute queries through to PostgreSQL.

o NTF Driver:
- Added support for GTYPE 5 geometries (a type of arc).
- Added support for GEOMETRY3D records in indexed (generic) datasets.

o TIGER/Line Driver:
- Added write support.
- Improved read support for TIGER 2000.

o OLE DB Provider:
- Added support for spatial queries via ICommand parameters.
- Added support for attribute queries by parsing out WHERE clause.
- In general substantial rework and extentions were made to make it
work with ESRI and AutoDesk clients.

o Added gdal/data/stateplane.txt - a test file with one line per state plane
zone for applications wanting to present options to users.

o Install ogrsf_frmts.a on install if building with OGR support enabled.

o Reports layer extents in ogrinfo.

OGR 1.1.5 Significant Bug Fixes
-------------------------------

o OGRSpatialReference:
- Fix bug with extracting linear units from EPSG derived definitions.
- Fixed bug translating LCC from EPSG to WKT (importFromEPSG()).
- Improved IsSame() test for GEOGCS now.
- Fixed crash if PROJECTION missing from PROJCS definition.

o S-57:
- Improve recovery from corrupt line geometries.
- Read objects as generic if the object class is not recognised.
- Handle LIST attributes as a string, instead of as a single int.

o NTF:
- Fixed circle conversion to polylines to close the circle properly.
- Upped MAX_LINK to 5000 to handle much more complex geometries.

o DGN:
- Don't include elements with the complex bit set in extents
computations.

o OGRGeometry:
- Fixed WKT format (import and export) for various container types.
- WKT import fixed for coordinates, and Z coordinates.
